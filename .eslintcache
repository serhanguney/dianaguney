[{"/Users/Serhan/Code/dianaguney/src/index.js":"1","/Users/Serhan/Code/dianaguney/src/App.js":"2","/Users/Serhan/Code/dianaguney/src/Pages/Home.js":"3","/Users/Serhan/Code/dianaguney/src/Pages/Projects.js":"4","/Users/Serhan/Code/dianaguney/src/Pages/Skills.js":"5","/Users/Serhan/Code/dianaguney/src/Pages/Contact.js":"6","/Users/Serhan/Code/dianaguney/src/Components/Navbar.js":"7","/Users/Serhan/Code/dianaguney/src/Components/Signature.js":"8","/Users/Serhan/Code/dianaguney/src/Components/MenuTitle.js":"9","/Users/Serhan/Code/dianaguney/src/Components/InfoIcon.js":"10","/Users/Serhan/Code/dianaguney/src/Components/Landscape.js":"11","/Users/Serhan/Code/dianaguney/src/Components/ArrowDown.js":"12","/Users/Serhan/Code/dianaguney/src/Components/Preview.js":"13","/Users/Serhan/Code/dianaguney/src/Components/Phone.js":"14","/Users/Serhan/Code/dianaguney/src/Components/AdvancedIcon.js":"15","/Users/Serhan/Code/dianaguney/src/Projects/Projects.js":"16","/Users/Serhan/Code/dianaguney/src/Components/MenuIcon.js":"17","/Users/Serhan/Code/dianaguney/src/Components/ArrowUp.js":"18","/Users/Serhan/Code/dianaguney/src/Components/ArrowLeft.js":"19","/Users/Serhan/Code/dianaguney/src/Components/ArrowRight.js":"20","/Users/Serhan/Code/dianaguney/src/Components/Desktop/NavbarDesktop.js":"21","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/HomeDesktop.js":"22","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/ProjectsDesktop.js":"23","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Slider.js":"24","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Modal.js":"25","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/SkillsDesktop.js":"26","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/ContactDesktop.js":"27","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Circle.js":"28","/Users/Serhan/Code/dianaguney/src/Components/Desktop/ModalImage.js":"29"},{"size":146,"mtime":1607779266169,"results":"30","hashOfConfig":"31"},{"size":4388,"mtime":1610976162445,"results":"32","hashOfConfig":"31"},{"size":5389,"mtime":1610565475036,"results":"33","hashOfConfig":"31"},{"size":4223,"mtime":1610628513034,"results":"34","hashOfConfig":"31"},{"size":3124,"mtime":1610976162455,"results":"35","hashOfConfig":"31"},{"size":2253,"mtime":1610021790349,"results":"36","hashOfConfig":"31"},{"size":4549,"mtime":1610972566111,"results":"37","hashOfConfig":"31"},{"size":868,"mtime":1610973459838,"results":"38","hashOfConfig":"31"},{"size":811,"mtime":1609255516726,"results":"39","hashOfConfig":"31"},{"size":3941,"mtime":1609236216599,"results":"40","hashOfConfig":"31"},{"size":1108,"mtime":1610566641450,"results":"41","hashOfConfig":"31"},{"size":489,"mtime":1610039367747,"results":"42","hashOfConfig":"31"},{"size":9313,"mtime":1610565287232,"results":"43","hashOfConfig":"31"},{"size":1015,"mtime":1609236216601,"results":"44","hashOfConfig":"31"},{"size":1417,"mtime":1609236216597,"results":"45","hashOfConfig":"31"},{"size":10561,"mtime":1610436055334,"results":"46","hashOfConfig":"31"},{"size":1615,"mtime":1609236216600,"results":"47","hashOfConfig":"31"},{"size":453,"mtime":1609236216599,"results":"48","hashOfConfig":"31"},{"size":462,"mtime":1609236216598,"results":"49","hashOfConfig":"31"},{"size":456,"mtime":1609236216598,"results":"50","hashOfConfig":"31"},{"size":2133,"mtime":1610976162449,"results":"51","hashOfConfig":"31"},{"size":3301,"mtime":1610976162452,"results":"52","hashOfConfig":"31"},{"size":2696,"mtime":1610976162453,"results":"53","hashOfConfig":"31"},{"size":7736,"mtime":1610976162450,"results":"54","hashOfConfig":"31"},{"size":2721,"mtime":1610976162448,"results":"55","hashOfConfig":"31"},{"size":1381,"mtime":1610976162454,"results":"56","hashOfConfig":"31"},{"size":782,"mtime":1610976162451,"results":"57","hashOfConfig":"31"},{"size":4105,"mtime":1610976162447,"results":"58","hashOfConfig":"31"},{"size":1253,"mtime":1610976162449,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"19bs676",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},"/Users/Serhan/Code/dianaguney/src/index.js",[],["131","132"],"/Users/Serhan/Code/dianaguney/src/App.js",[],"/Users/Serhan/Code/dianaguney/src/Pages/Home.js",["133","134","135","136"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\n//IMAGES\nimport homeCover from \"../Images/balconies/1.jpg\";\nimport sign from \"../SVGs/Signature.svg\";\nimport ArrowDown from \"../Components/ArrowDown\";\nimport ArrowRight from \"../Components/ArrowRight\";\nimport projectsIcon from \"../Icons/projectsIcon.svg\";\n\n//COMPONENTS\nimport Navbar from \"../Components/Navbar\";\nimport Preview from \"../Components/Preview\";\n\n//ADDITIONAL\nimport { motion, useAnimation, useCycle, useMotionValue } from \"framer-motion\";\nimport { projects } from \"../Projects/Projects\";\n\nexport default function Home({ toggle, transition }) {\n  //STATES\n  const { menuOpen, setMenuOpen } = toggle;\n\n  const [elements, setElements] = useState(projects);\n  const [preview, setPreview] = useState(false);\n\n  //VARIABLES\n  const { tranSwipe, tranSmooth } = transition;\n  const location = useLocation();\n  const history = useHistory();\n\n  const [hide, cycleHide] = useCycle(\n    {\n      opacity: 1,\n      transition: { delay: 0.8, ...tranSwipe(0.8) },\n    },\n    {\n      opacity: 0,\n      transition: tranSwipe(0.8),\n    }\n  );\n\n  //ANIMATION\n  //this will be used to animate the scrolling of the window when element is active\n  const scroll = useMotionValue(0);\n  function setScroll() {\n    scroll.set(window.scrollY);\n  }\n  const disablePreviewScroll = (reference) => {\n    if (reference) {\n      console.log(\"reference\", reference);\n      // disableBodyScroll(reference);\n    }\n  };\n\n  const enablePreviewScroll = (reference) => {\n    if (reference) {\n      console.log(\"reference\", reference);\n    }\n  };\n  //we set the scroll motionvalue to window.scrollY so it doesn't scroll from the top everytime.\n  useEffect(() => {\n    let targetElement = document.querySelector(\"html\");\n\n    if (!preview) {\n      window.addEventListener(\"scroll\", setScroll);\n      enablePreviewScroll();\n      targetElement.classList.remove(\"no-scroll\");\n    } else {\n      window.removeEventListener(\"scroll\", setScroll);\n      disablePreviewScroll();\n      targetElement.classList.add(\"no-scroll\");\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", setScroll);\n    };\n  }, [preview]);\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n\n  useEffect(() => {\n    //clear history on component mount\n    history.replace();\n  }, []);\n  return (\n    <motion.div className=\"home-page\" transition={tranSwipe(1)}>\n      <motion.div\n        className=\"page-transition-element\"\n        initial={location.state ? { width: \"100%\" } : \"\"}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n      ></motion.div>\n\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n        preview={preview}\n      />\n      <motion.div\n        className=\"home-content\"\n        transition={{ delay: 0.4, ...tranSwipe(0.8) }}\n      >\n        <div className=\"cover-image\">\n          <div className=\"overlay\"></div>\n          <img src={homeCover} alt=\"Cover\" />\n        </div>\n        <motion.div className=\"introduction-section\" animate={hide}>\n          <h1>About Me</h1>\n          <h2 style={{ fontSize: \"14px\" }}>\n            I am a passionate designer with love for story telling through\n            architecture and cinema.\n          </h2>\n          <p>\n            My background is in Architecture and design and I have a major\n            interest for film and set design. Combining digital media and\n            physcial modeling I love to come up with new designs, scenes and\n            stories to tell.I Have a record of working with model making,\n            graphical and technical presentations, conceptual design and art,\n            sketches and drawings.\n          </p>\n          <img src={sign} />\n          <div className=\"scroll-for-more\">\n            <p>scroll for projects</p>\n            <ArrowDown />\n          </div>\n        </motion.div>\n        <div className=\"home-projects-section\">\n          {elements.map(\n            (element, index) =>\n              index < 3 && (\n                <Preview\n                  key={index}\n                  index={index}\n                  state={{ elements, element, setElements }}\n                  toggle={{ preview, setPreview }}\n                  toggleHide={{ hide, cycleHide }}\n                  tranSwipe={tranSwipe}\n                  scroll={scroll}\n                  enableReference={enablePreviewScroll}\n                  disableReference={disablePreviewScroll}\n                />\n              )\n          )}\n          <img\n            className=\"projects-icon\"\n            src={projectsIcon}\n            alt=\"projects-icon\"\n          />\n          <Link to={{ pathname: \"/projects\", state: true }}>\n            <motion.button className=\"link-button\" whileTap={{ scale: 0.9 }}>\n              <span>Go to Projects</span>\n            </motion.button>\n            <ArrowRight />\n          </Link>\n        </div>\n        <div className=\"footer\"></div>\n      </motion.div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Projects.js",["137","138","139","140"],"import React, { useEffect, useState } from \"react\";\n\n//PAGES\nimport Navbar from \"../Components/Navbar\";\nimport Preview from \"../Components/Preview\";\n//IMAGES\nimport ArrowDown from \"../Components/ArrowDown\";\nimport pageCover from \"../Images/furniture/ProjectsCover.jpg\";\n//ADDITIONALS\nimport { motion, useAnimation, useCycle, useMotionValue } from \"framer-motion\";\n\n//PROJECTS\nimport { projects } from \"../Projects/Projects\";\nimport {\n  clearAllBodyScrollLocks,\n  disableBodyScroll,\n  enableBodyScroll,\n} from \"body-scroll-lock\";\n\nexport default function Projects({ toggle, transition }) {\n  //STATES\n  const [preview, setPreview] = useState(false);\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n  const [elements, setElements] = useState(projects);\n\n  //the cyle animation is for inactive elements to disappear when an element is activated.\n  //it needs to be defined in the parent component this way we only have one toggle that controls all children separately.\n  //we use a ternary to animate each component separately {!element.active ? hide : \"\"}\n  const [hide, cycleHide] = useCycle(\n    {\n      opacity: 1,\n      transition: { delay: 0.8, ...tranSwipe(0.8) },\n    },\n    {\n      opacity: 0,\n      transition: tranSwipe(0.8),\n    }\n  );\n  //start from the top of the page\n  useEffect(() => {\n    const scroll = window.scrollY;\n    if (scroll !== 0) {\n      window.scrollTo(0, 0);\n    }\n  }, []);\n\n  //this will be used to animate the scrolling of the window when element is active\n  const scroll = useMotionValue(0);\n  function setScroll() {\n    console.log(\"scrolled\");\n    scroll.set(window.scrollY);\n  }\n\n  const disablePreviewScroll = (reference) => {\n    if (reference) {\n      disableBodyScroll(reference);\n    }\n  };\n\n  const enablePreviewScroll = (reference) => {\n    if (reference) {\n      enableBodyScroll(reference);\n    }\n  };\n\n  //we set the scroll motionvalue to window.scrollY so it doesn't scroll from the top everytime.\n  useEffect(() => {\n    let targetElement = document.querySelector(\"html\");\n    if (!preview) {\n      window.addEventListener(\"scroll\", setScroll);\n      enablePreviewScroll();\n      targetElement.classList.remove(\"no-scroll\");\n    } else {\n      targetElement.classList.add(\"no-scroll\");\n      window.removeEventListener(\"scroll\", setScroll);\n      disablePreviewScroll();\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", setScroll);\n    };\n  }, [preview]);\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, [c]);\n\n  return (\n    <div className=\"projects-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n        preview={preview}\n      />\n\n      <motion.div className=\"projects-content\">\n        <div className=\"intro-to-projects\">\n          <p>\n            Below you'll find the projects I did throughout my education in\n            architecture.\n          </p>\n\n          <div className=\"image-container\">\n            <img src={pageCover} />\n            <div className=\"scroll-container\">\n              <p>scroll for projects</p>\n              <ArrowDown color=\"white\" />\n            </div>\n          </div>\n        </div>\n        {elements.map((element, index) => (\n          <Preview\n            key={index}\n            state={{ element, elements, setElements }}\n            toggle={{ preview, setPreview }}\n            index={index}\n            toggleHide={{ hide, cycleHide }}\n            tranSwipe={tranSwipe}\n            scroll={scroll}\n            disableReference={disablePreviewScroll}\n            enableReference={enablePreviewScroll}\n          />\n        ))}\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Skills.js",["141"],"import React, { useEffect } from \"react\";\n\n//PAGES\nimport Navbar from \"../Components/Navbar\";\nimport AdvancedIcon from \"../Components/AdvancedIcon\";\nimport checkIcon from \"../SVGs/CheckIcon.svg\";\n\n//ADDITIONALS\nimport { motion, useAnimation } from \"framer-motion\";\n\nexport const skills = [\n  {\n    title: \"2D Modeling\",\n    list: [{ name: \"AutoCad 2D\", advanced: true }],\n  },\n  {\n    title: \"3D Modeling\",\n    list: [\n      { name: \"Rhino 3D\", advanced: true },\n      { name: \"Sketch-up 3D\", advanced: false },\n      { name: \"Microstation\", advanced: true },\n      { name: \"3D point cloud\", advanced: true },\n      { name: \"Physical Modelling\", advanced: true },\n    ],\n  },\n  {\n    title: \"Editing\",\n    list: [\n      { name: \"Photoshop CS6\", advanced: true },\n      { name: \"Indesign CS6\", advanced: true },\n      { name: \"Illustrator CS6\", advanced: true },\n    ],\n  },\n];\nexport default function Skills({ toggle, transition }) {\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n  return (\n    <div className=\"skills-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n      />\n      <motion.div className=\"skills-content\">\n        <div className=\"skills-text\">\n          <p>\n            I work with&nbsp;\n            <span>\n              3D design {\"&\"} modelling, 2D illustrations and sketching and\n              editing with Adobe CS6.\n            </span>\n          </p>\n        </div>\n        <div className=\"skills-info\">\n          <div className=\"row\">\n            <AdvancedIcon advanced={true} />\n            <p>Advanced</p>\n          </div>\n          <div className=\"row\">\n            <AdvancedIcon advanced={false} />\n            <p>Intermediate</p>\n          </div>\n          <div className=\"row\"></div>\n        </div>\n        <div className=\"skills-section\">\n          <div className=\"column\">\n            {skills.map((item, index) => (\n              <div className=\"skill-container\">\n                <h2>{item.title}</h2>\n                <div className=\"skill-list-container\">\n                  {item.list.map((el, i) => (\n                    <div className=\"skill-row\">\n                      <img src={checkIcon} alt=\"check\" />\n                      <p>{el.name}</p>\n                      <AdvancedIcon advanced={el.advanced} />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Contact.js",["142"],"import React, { useEffect } from \"react\";\n//PAGES\nimport Navbar from \"../Components/Navbar\";\n\n//IMAGES\nimport pageCover from \"../Images/paperTubes/ContactCover.jpg\";\nimport email from \"../Icons/contactIcon.svg\";\nimport phone from \"../Icons/phoneIcon.svg\";\nimport signature from \"../SVGs/Signature.svg\";\n//ADDITIONALS\nimport { motion, useAnimation } from \"framer-motion\";\n\nexport default function Contact({ toggle, transition }) {\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n  return (\n    <div className=\"contact-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n      />\n      <motion.div className=\"contact-content\">\n        <div className=\"info-container\">\n          <div className=\"text-aligner\">\n            <p>\n              Thank you for taking the time to browse through what I’ve been\n              doing. You can reach me using the contact information below.\n            </p>\n          </div>\n          <div className=\"signature\">\n            <img src={signature} alt=\"signature\" />\n          </div>\n          <h2>Contact Information</h2>\n          <div className=\"email-container\">\n            <img src={email} alt=\"email\" />\n            <p>diana.guney.93@gmail.com</p>\n          </div>\n          <div className=\"phone-container\">\n            <img src={phone} alt=\"phone\" />\n            <p>+46 73 779 99 93</p>\n          </div>\n        </div>\n        <div className=\"image-container\">\n          <div className=\"overlay\"></div>\n          <img src={pageCover} alt=\"contact-cover\" />\n        </div>\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Navbar.js",["143"],"/Users/Serhan/Code/dianaguney/src/Components/Signature.js",[],"/Users/Serhan/Code/dianaguney/src/Components/MenuTitle.js",["144"],"import React, { useState } from \"react\";\n\n//ADDITIONAOLS\nimport { motion } from \"framer-motion\";\n\nexport default function MenuTitle({ title, tranSwipe }) {\n  const [length, setLength] = useState(title);\n  const parent = {\n    initial: { y: 0, transition: { staggerChildren: 0.008 } },\n    animate: { y: 0, transition: { staggerChildren: 0.008 } },\n  };\n\n  const children = {\n    initial: { y: 30, transition: tranSwipe(0.4) },\n    animate: { y: 0, transition: tranSwipe(1) },\n  };\n  return (\n    <motion.div\n      className=\"title-container\"\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"initial\"\n      variants={parent}\n    >\n      {length.map((letter, index) => (\n        <motion.span key={index} variants={children}>\n          {letter}\n        </motion.span>\n      ))}\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/InfoIcon.js",["145","146","147"],"/Users/Serhan/Code/dianaguney/src/Components/Landscape.js",["148"],"import React, { useEffect } from \"react\";\n\nimport { motion } from \"framer-motion\";\nimport Phone from \"./Phone\";\n\nexport default function Landscape() {\n  //classes\n\n  const icon = {\n    boxShadow: \"4px 4px 16px rgba(0,0,0,0.3)\",\n  };\n  useEffect(() => {\n    const targetElement = document.querySelector(\".landscape-text\");\n    targetElement.scrollIntoView({ behavior: \"smooth\" });\n    window.scrollTo({\n      top: \"40px\",\n      behavior: \"smooth\",\n    });\n  }, []);\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 2 }}\n      className=\"landscape\"\n    >\n      <div className=\"landscape-text\">\n        <h1>Move to Portrait Mode please</h1>\n        <p>\n          This is a portrait-only website. I'd kindly like to ask you to use my\n          website in portrait mode please.\n        </p>\n        <h2>Thank you :)</h2>\n      </div>\n      <div className=\"landscape-visual\">\n        <div className=\"phone-container\">\n          <div className=\"phone\">\n            <Phone />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/ArrowDown.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Preview.js",["149","150","151","152","153","154"],"import React, { useRef, useEffect } from \"react\";\nimport ArrowUp from \"./ArrowUp\";\nimport ArrowLeft from \"./ArrowLeft\";\nimport ArrowRight from \"./ArrowRight\";\nimport ArrowDown from \"./ArrowDown\";\n// import SwipeIcon from \"../SVGs/SwipeIcon.svg\";\n\n//ADDITIONALS\nimport {\n  animate,\n  motion,\n  useMotionValue,\n  useTransform,\n  AnimatePresence,\n  useElementScroll,\n} from \"framer-motion\";\n\nimport {\n  clearAllBodyScrollLocks,\n  disableBodyScroll,\n  enableBodyScroll,\n} from \"body-scroll-lock\";\n\nexport default function Preview({\n  state,\n  index,\n  tranSwipe,\n  toggle,\n  toggleHide,\n  scroll,\n  enableReference,\n  disableReference,\n}) {\n  //STATES\n  const refContainer = useRef(null);\n  const refSlider = useRef(null);\n  const { element, elements, setElements } = state;\n  const { preview, setPreview } = toggle;\n  const { hide, cycleHide } = toggleHide;\n\n  //ANIMATIONS\n\n  //t is used to animate towards preview mode\n  const t = useMotionValue(0);\n\n  const height = useTransform(t, [0, 500], [420, window.innerHeight]);\n  const enlargeWidth = useTransform(t, [0, 500], [\"70%\", \"130%\"]);\n  const fadeOut = useTransform(t, [0, 500], [1, 0]);\n  const slideOut = useTransform(t, [0, 500], [0, 30]);\n  const slideUp = useTransform(t, [0, 500], [0, -100]);\n  const tDelay = useMotionValue(0);\n  const delaySlideIn = useTransform(tDelay, [0, 500], [25, 0]);\n  const delayFadeIn = useTransform(tDelay, [0, 500], [0, 1]);\n\n  //d animates the description part in preview\n  const d = useMotionValue(0);\n\n  const dExpand = useTransform(d, [0, 500], [0, -350]);\n  const dFadeIn = useTransform(d, [0, 500], [0, 1]);\n  const dFadeOut = useTransform(d, [0, 500], [1, 0]);\n  const dSlide = useTransform(d, [0, 500], [\"0%\", \"-100%\"]);\n\n  //trigger animation and handlescroll in preview\n\n  useEffect(() => {\n    if (!element.active) {\n      animate(t, 0, { delay: 0.5, ...tranSwipe(0.8) });\n      animate(tDelay, 0, tranSwipe(0.8));\n    } else {\n      handleScroll();\n    }\n  }, [element]);\n\n  // freeze body scroll in preview mode\n\n  useEffect(() => {\n    if (element.active) {\n      disableReference(refSlider.current);\n    } else {\n      enableReference(refSlider.current);\n    }\n\n    // preview\n    // ? targetElement.classList.add(\"no-scroll\")\n    // : targetElement.classList.remove(\"no-scroll\");\n    // element.active\n    // ? disableBodyScroll(refSlider.current)\n    // : enableBodyScroll(refSlider.current);\n    // if (element.active) {\n    // console.log(\"disable scroll\");\n    // disableBodyScroll(refSlider.current);\n    // } else {\n    // clearAllBodyScrollLocks();\n    // }\n  }, [preview]);\n\n  //HANDLER FUNCTIONS\n\n  function handleOpen(index) {\n    //set navbar z-index\n    const navbar = document.querySelector(\".navbar-container\");\n    navbar.classList.add(\"behind\");\n    //Element activation is required to handle animations of the page.\n    //Whichever element is active thats what we'll animate.\n    const array = elements.map((el, i) => {\n      if (index === i) {\n        if (el.active) {\n          return { ...el, active: false };\n        } else {\n          return { ...el, active: true };\n        }\n      } else {\n        return { ...el, active: false };\n      }\n    });\n\n    setElements(array);\n\n    //preview is required for the page elements outisde element.map(); like navbar.\n    //We can't send the element.active information simply because these elements are outside the map loop.\n    setPreview(true);\n    cycleHide();\n  }\n\n  function handleClose() {\n    if (preview) {\n      const array = elements.map((el) => {\n        if (el.active) {\n          return { ...el, active: false };\n        } else;\n        return el;\n      });\n\n      cycleHide();\n      setElements(array);\n      setPreview(false);\n    }\n    setTimeout(() => {\n      const navbar = document.querySelector(\".navbar-container\");\n      navbar.classList.remove(\"behind\");\n    }, 1500);\n  }\n\n  function handleScroll() {\n    const unsubscribe = scroll.onChange((value) => {\n      window.scrollTo({\n        top: value,\n      });\n    });\n\n    //when pressed see more handles the scroll so that the element is in the middle of the screen\n    //triggers the rest of the animations.\n    if (refContainer.current) {\n      if (element.active) {\n        let container = refContainer.current.getBoundingClientRect();\n        const total = container.top + window.scrollY - window.innerHeight / 6;\n        animate(scroll, total, {\n          ...tranSwipe(1.2),\n          onComplete: () => {\n            animateElement();\n            unsubscribe();\n          },\n        });\n      }\n    }\n  }\n  function animateElement() {\n    animate(t, 500, tranSwipe(0.8));\n    animate(tDelay, 500, {\n      delay: 0.5,\n      ...tranSwipe(0.8),\n    });\n  }\n\n  return (\n    <motion.div\n      ref={refContainer}\n      id={element.id}\n      key={index}\n      className=\"project-container\"\n      animate={!element.active && hide}\n      style={{ height, marginTop: slideUp }}\n      layout\n    >\n      <motion.div\n        className=\"preview-background\"\n        animate={\n          element.active\n            ? { opacity: 1, transition: tranSwipe(0.8) }\n            : { opacity: 0, transition: { delay: 0.5, ...tranSwipe(0.8) } }\n        }\n      ></motion.div>\n      <motion.div className=\"text-container\">\n        <h1>{element.title}</h1>\n        <p>{element.text}</p>\n      </motion.div>\n      <motion.div className=\"button-section\">\n        <motion.div\n          className=\"button-container\"\n          style={{ x: slideOut, opacity: fadeOut }}\n        >\n          <motion.button\n            onClick={() => handleOpen(index)}\n            className=\"primary-button\"\n          >\n            <span>See more</span>\n          </motion.button>\n          <ArrowRight />\n        </motion.div>\n        <motion.div\n          className={\n            element.active ? \"button-container\" : \"button-container freeze\"\n          }\n          style={{ x: delaySlideIn, opacity: delayFadeIn }}\n        >\n          <ArrowLeft />\n          <motion.button\n            onClick={() => handleClose(index)}\n            className=\"primary-button\"\n          >\n            <span>Go back</span>\n          </motion.button>\n        </motion.div>\n      </motion.div>\n      <motion.div key={index} className=\"project-slider\" layout>\n        <motion.div\n          ref={refSlider}\n          className=\"slider-container\"\n          transition={tranSwipe(0.8)}\n          layout\n        >\n          {element.photos.map((photo, i) => (\n            <motion.div\n              key={i}\n              className=\"image-container\"\n              transition={tranSwipe(0.8)}\n              style={{ width: enlargeWidth }}\n              layout\n            >\n              <div className=\"image-layout\">\n                <motion.img\n                  src={photo}\n                  alt={i}\n                  transition={tranSwipe(0.8)}\n                  layout\n                />\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </motion.div>\n\n      <motion.div\n        className=\"description-background\"\n        style={{ opacity: dFadeIn }}\n      ></motion.div>\n      <AnimatePresence>\n        {element.active && (\n          <motion.div\n            className=\"project-description\"\n            initial={{ x: 30, opacity: 0 }}\n            animate={{\n              x: 0,\n              opacity: 1,\n              transition: { delay: 1.5, ...tranSwipe(0.8) },\n            }}\n            exit={{ x: 30, opacity: 0, height: 0, transition: tranSwipe(0.6) }}\n            style={{ y: dExpand }}\n            layout\n          >\n            <motion.div\n              className=\"description-overlay\"\n              style={{ opacity: dFadeOut }}\n            ></motion.div>\n            <div className=\"description-title\">\n              <h2>Description</h2>\n              <div className=\"info-container\">\n                <motion.div\n                  className=\"button-container\"\n                  style={{ x: dSlide, opacity: dFadeOut }}\n                >\n                  <button\n                    className=\"primary-button\"\n                    onClick={() => {\n                      d.current === 0\n                        ? animate(d, 500, { ...tranSwipe(0.6) })\n                        : animate(d, 0, { ...tranSwipe(0.6) });\n                    }}\n                  >\n                    <span style={{ fontSize: \"16px\" }}>Press for more</span>\n                  </button>\n                  <ArrowUp />\n                </motion.div>\n                <motion.div\n                  className=\"button-container\"\n                  style={{ x: dSlide, opacity: dFadeIn }}\n                >\n                  <button\n                    className=\"primary-button\"\n                    onClick={() => {\n                      d.current === 0\n                        ? animate(d, 500, { ...tranSwipe(0.6) })\n                        : animate(d, 0, { ...tranSwipe(0.6) });\n                    }}\n                  >\n                    <span style={{ fontSize: \"16px\" }}>Press for less</span>\n                  </button>\n                  <ArrowDown />\n                </motion.div>\n              </div>\n            </div>\n            <div className=\"description\">\n              <p>{element.paragraph}</p>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Phone.js",[],"/Users/Serhan/Code/dianaguney/src/Components/AdvancedIcon.js",[],"/Users/Serhan/Code/dianaguney/src/Projects/Projects.js",[],"/Users/Serhan/Code/dianaguney/src/Components/MenuIcon.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowUp.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowLeft.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowRight.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Desktop/NavbarDesktop.js",["155"],"import React, { useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nimport { menuItems } from \"../Navbar\";\nimport Signature from \"../Signature\";\nimport MenuTitle from \"../MenuTitle\";\n\nexport default function NavbarDesktop({ tranSwipe, tranSmooth }) {\n  //define location to anticipate user's paths based on which page he is coming from.\n  //ITEM MATCH - we'll use location.pathname to match the menu links and location.state to distinguish navigation from homepage\n  const location = useLocation();\n\n  //ICON MATCH - we'll use the icon state to match the global menu icon with the appropriate page icon\n  const [icon, setIcon] = useState(null);\n\n  //TITLE MATCH - we'll send the page title to MenuTitle component to animate it.\n  const filteredItems = menuItems.filter(\n    (item) => location.pathname === `/${item.link}`\n  );\n  const mainTitle = filteredItems[0].text.split(\"\");\n\n  //ICON MATCH - we'll use location to do the icon matchin via useEffect\n  useEffect(() => {\n    const item = menuItems.filter(\n      (item) => `/${item.link}` === location.pathname\n    );\n\n    //since the icon of the homepage is the only animatable icon we'll have to do an if conditional\n    if (item[0].title === \"Home\") {\n      setIcon(<Signature tranSmooth={tranSmooth} tranSwipe={tranSwipe} />);\n    } else {\n      setIcon(<img src={item[0].icon} alt={item[0].title} />);\n    }\n    console.log(\"item\", [item, location.pathname]);\n  }, []);\n\n  return (\n    <div className=\"navbar-desktop\">\n      <div className=\"menu-icon\">{icon}</div>\n      <div className=\"menu-title\">\n        {<MenuTitle title={mainTitle} tranSwipe={tranSwipe} />}\n      </div>\n      <div className=\"menu-items\">\n        {menuItems.map((item, index) => (\n          <Link\n            key={index}\n            to={{ pathname: item.link, state: item.fromDashboard }}\n          >\n            <h2>{item.text}</h2>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/HomeDesktop.js",[],"/Users/Serhan/Code/dianaguney/src/Pages/Desktop/ProjectsDesktop.js",["156","157","158"],"import React, { useEffect, useState } from \"react\";\nimport Slider from \"../../Components/Desktop/Slider\";\nimport { projects } from \"../../Projects/Projects\";\nimport NavbarDesktop from \"../../Components/Desktop/NavbarDesktop\";\n\nexport default function ProjectsDesktop({ transition }) {\n  const { tranSwipe } = transition;\n\n  //windowBlocks is for determining the available types of sliders.\n  const windowBlocks = [\n    { size: 800, width: `${100 / 4}%`, count: 4 },\n    { size: 1100, width: `${100 / 5}%`, count: 5 },\n    { size: 3000, width: `${100 / 6}%`, count: 6 },\n  ];\n\n  //block is for selecting the current slider type from the available types.\n  const [block, setBlock] = useState({});\n\n  useEffect(() => {\n    console.log(\"you're in projects page\");\n    //set the block type on load\n    if (window.innerWidth > 1100) {\n      setBlock({\n        size: window.innerWidth,\n        width: `${100 / 6}%`,\n        count: 6,\n      });\n    } else if (window.innerWidth < 1100 && window.innerWidth > 800) {\n      setBlock({\n        size: window.innerWidth,\n        width: `${100 / 5}%`,\n        count: 5,\n      });\n    } else if (window.innerWidth < 800) {\n      setBlock({\n        size: window.innerWidth,\n        width: `${100 / 4}%`,\n        count: 4,\n      });\n    }\n    //setting the block type on resize\n    window.addEventListener(\"resize\", () => {\n      const filteredBlock = [];\n      windowBlocks.map((item) => {\n        if (window.innerWidth < item.size) {\n          filteredBlock.push(item);\n        }\n      });\n      //   use reduce to select the smallest in filteredBlock\n      const smallest = filteredBlock.reduce(\n        (min, item) => (min.size < item.size ? min : item),\n        filteredBlock[0]\n      );\n      // console.log(\"filteredBlock , smallest\", [filteredBlock, smallest]);\n      setBlock(smallest);\n    });\n    return () => {\n      window.removeEventListener(\"resize\", () => {\n        const filteredBlock = [];\n        windowBlocks.map((item) => {\n          if (window.innerWidth < item.size) {\n            filteredBlock.push(item);\n          }\n        });\n        //   use reduce to select the smallest in filteredBlock\n        const smallest = filteredBlock.reduce(\n          (min, item) => (min.size < item.size ? min : item),\n          filteredBlock[0]\n        );\n        setBlock(smallest);\n      });\n    };\n  }, []);\n  //setting the image count using the current block\n\n  return (\n    <div className=\"projects\">\n      <NavbarDesktop tranSwipe={tranSwipe} />\n      {projects.map((project, index) => (\n        <Slider\n          key={index}\n          project={project}\n          tranSwipe={tranSwipe}\n          block={block}\n        />\n      ))}\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Slider.js",["159","160","161","162","163"],"import React, { useEffect, useState, useRef } from \"react\";\n\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nimport Modal from \"./Modal\";\nimport {\n  AnimatePresence,\n  motion,\n  useMotionValue,\n  animate,\n} from \"framer-motion\";\nimport { clamp } from \"lodash-es\";\n\nexport default function Slider({ tranSwipe, project, block }) {\n  const [sliderCount, setSliderCount] = useState([]);\n  const [modal, setModal] = useState({ active: false, element: null });\n\n  //load is required to hold on until DOM is loaded\n  const [load, setLoad] = useState(false);\n\n  //progress to prevent intervening animate() in progress\n  const [progress, setProgress] = useState(false);\n\n  const slide = useMotionValue(0);\n\n  //slideLimit and maskIndex is required to set limits to user swipes\n  const slideLimit = useRef(0);\n  const maskIndex = useRef(0);\n\n  //fallback is required to tell the user the direction of slider arrows with animations\n  const fallback = useRef(0);\n\n  //width is required to get the slider mask width\n  const width = useRef(0);\n\n  useEffect(() => {\n    // window.addEventListener(\"load\", function loadPage() {\n    //   console.log(\"welcome\");\n\n    // });\n    setLoad(true);\n    if (block.count) {\n      //set the image block thresholds for how many slider-masks we'll have\n      const division = project.photos.reduce((thresholds, photo, index) => {\n        if ((index / block.count) % 1 === 0) {\n          thresholds.push(index);\n        }\n        return thresholds;\n      }, []);\n      // console.log(\"divide by\", [division, project.photos.length]);\n\n      setSliderCount(division);\n    }\n  }, [block]);\n\n  useEffect(() => {\n    //set width of slider mask\n    if (load && sliderCount.length > 0) {\n      const target = document.getElementById(`${project.title}-slider`);\n      const children = Array.from(target.querySelectorAll(\".slider-mask\"));\n      slideLimit.current = children.length;\n      console.log(\"you're in Slider component\", [target, children]);\n      width.current =\n        children[0].getBoundingClientRect().width - window.innerWidth * 0.05;\n      // console.log(\"padding\", window.innerWidth * 0.05);\n    } else {\n      return;\n    }\n  }, [load, sliderCount]);\n\n  // useEffect(() => slide.onChange((value) => console.log(value)), [slide]);\n\n  function slideAway(direction) {\n    //animate the slider mask slidings within set limitations\n    //using maskIndex I set the limits for the user's swipe actions\n    maskIndex.current = clamp(\n      -1,\n      maskIndex.current - direction,\n      slideLimit.current\n    );\n    // console.log(\"maskindex,slidelimit\", maskIndex.current, slideLimit.current);\n\n    if (maskIndex.current < 0) {\n      //this is for when you reach zero limit where there is nothing to show\n      animate(slide, [slide.current, slide.current + 10, slide.current], {\n        duration: 0.3,\n      });\n      maskIndex.current = 0;\n      // console.log(\"you're at zero\", [maskIndex.current, direction]);\n    } else if (\n      maskIndex.current > -1 &&\n      maskIndex.current < slideLimit.current\n    ) {\n      setProgress(true);\n      //delta is the difference we set later on in winkAnimate with fallback\n      const delta = direction > 0 ? -50 : 50;\n      animate(\n        slide,\n        slide.current + delta + width.current * direction,\n        tranSwipe(0.8)\n      );\n    } else if (maskIndex.current === slideLimit.current) {\n      animate(slide, [slide.current, slide.current - 10, slide.current], {\n        duration: 0.3,\n      });\n      maskIndex.current = slideLimit.current - 1;\n      // console.log(\"you're at limit\", maskIndex);\n    }\n  }\n\n  //winkAnimate is to tell the user that he reached the swipe limit\n  function winkAnimate(direction, enter) {\n    //based on direction and hover state of user I set the appropriate direction for the fallback animation\n    //I needed fallback reference here to save the initial slide.current so I can come back to it\n    if (!progress) {\n      if (direction < 0) {\n        if (enter > 0) {\n          //fallback is required here to enable comeback to previous slide.current state\n          fallback.current = slide.current;\n          animate(slide, fallback.current - 50, {\n            type: \"spring\",\n            stiffness: 250,\n            damping: 20,\n          });\n        } else {\n          // console.log(fallback.current);\n          animate(slide, fallback.current, {\n            type: \"spring\",\n            stiffness: 250,\n            damping: 20,\n          });\n        }\n      } else {\n        if (enter > 0) {\n          fallback.current = slide.current;\n          // console.log(\"mouseenter\", fallback.current);\n          animate(slide, fallback.current + 50, {\n            type: \"spring\",\n            stiffness: 250,\n            damping: 20,\n          });\n        } else {\n          // console.log(\"mouseleave\", fallback.current);\n          animate(slide, fallback.current, {\n            type: \"spring\",\n            stiffness: 250,\n            damping: 20,\n          });\n        }\n      }\n    }\n  }\n  return (\n    <>\n      {load && (\n        <div className=\"project-container\">\n          <AnimatePresence exitBeforeEnter>\n            {modal.active && (\n              <Modal\n                modalObject={{ modal, setModal }}\n                tranSwipe={tranSwipe}\n              ></Modal>\n            )}\n          </AnimatePresence>\n          <div className=\"text-container\">\n            <h1>{project.title}</h1>\n            <p>{project.text}</p>\n          </div>\n          <div className=\"slider-container\" id={`${project.title}-slider`}>\n            {sliderCount.length > 1 && (\n              <>\n                <a\n                  onClick={() => slideAway(-1)}\n                  onMouseEnter={() => winkAnimate(-1, 1)}\n                  onMouseLeave={() => {\n                    winkAnimate(-1, -1);\n                    setProgress(false);\n                  }}\n                >{`<`}</a>\n                <a\n                  onClick={() => slideAway(1)}\n                  onMouseEnter={() => winkAnimate(1, 1)}\n                  onMouseLeave={() => {\n                    winkAnimate(1, -1);\n                    setProgress(false);\n                  }}\n                >{`>`}</a>\n              </>\n            )}\n            {sliderCount.map((slider, i) => (\n              <motion.div key={i} className=\"slider-mask\" style={{ x: slide }}>\n                {project.photos.map(\n                  (photo, index) =>\n                    index < block.count && (\n                      <div\n                        key={index}\n                        className=\"card\"\n                        style={{ width: block.width }}\n                        onClick={() =>\n                          setModal({\n                            active: true,\n                            element: project,\n                            index: index,\n                          })\n                        }\n                      >\n                        <motion.div\n                          className=\"slider-image-container\"\n                          custom={index}\n                          whileHover={{\n                            scale: 1.1,\n                            zIndex: 5,\n                          }}\n                        >\n                          <img\n                            className=\"slider-image\"\n                            effect=\"blur\"\n                            src={photo}\n                            alt={index}\n                          />\n                        </motion.div>\n                      </div>\n                    )\n                )}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Modal.js",["164","165","166","167","168"],"import React, { useEffect, useRef, useState } from \"react\";\nimport ModalImage from \"./ModalImage\";\nimport {\n  motion,\n  AnimatePresence,\n  useMotionValue,\n  useTransform,\n  animate,\n} from \"framer-motion\";\n\nimport clamp from \"lodash-es/clamp\";\n\nexport default function Modal({ modalObject, tranSwipe }) {\n  const { modal, setModal } = modalObject;\n  // useEffect(() => modal.element && console.log(\"modal\", modal), [modal]);\n  const direction = useRef(0);\n  //VARIANTS\n  const containerVariants = {\n    initial: { opacity: 0 },\n    animate: { opacity: 1 },\n    exit: { opacity: 0 },\n  };\n\n  const bgVariants = {\n    initial: { opacity: 0, transition: { delay: 0.4 } },\n    animate: { opacity: 1 },\n    exit: { opacity: 0, transition: { delay: 0.4 } },\n  };\n  const imageContainer = {\n    initial: { opacity: 1, transition: { staggerChildren: 1 } },\n    animate: { opacity: 1, transition: { staggerChildren: 1 } },\n  };\n  //SLIDER\n\n  const [slideIndex, setSlideIndex] = useState(modal.index && modal.index);\n\n  // useEffect(() => console.log(\"parent\", slideIndex), []);\n\n  return (\n    <motion.div\n      className=\"modal\"\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      variants={containerVariants}\n    >\n      <motion.div\n        className=\"background\"\n        variants={bgVariants}\n        exit=\"exit\"\n      ></motion.div>\n      <div className=\"content-container\">\n        <div className=\"visual-content\">\n          <motion.div\n            className=\"modal-slider\"\n            initial=\"initial\"\n            animate=\"animate\"\n            variants={imageContainer}\n            inherit={false}\n          >\n            {modal.element.photos.map((item, index) => (\n              <ModalImage\n                key={index}\n                i={index}\n                slideIndex={slideIndex}\n                modal={modal}\n                photo={item}\n                tranSwipe={tranSwipe}\n                direction={direction}\n              />\n            ))}\n          </motion.div>\n        </div>\n        <div className=\"function-container\">\n          <motion.a\n            onClick={() => {\n              setSlideIndex(\n                clamp(slideIndex + 1, 0, modal.element.photos.length - 1)\n              );\n              direction.current = -1;\n            }}\n          >{`<`}</motion.a>\n          <motion.a\n            onClick={() => {\n              setSlideIndex(\n                clamp(slideIndex - 1, 0, modal.element.photos.length - 1)\n              );\n              direction.current = 1;\n            }}\n          >{`>`}</motion.a>\n          <button onClick={() => setModal({ active: false, element: null })}>\n            x\n          </button>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/SkillsDesktop.js",[],"/Users/Serhan/Code/dianaguney/src/Pages/Desktop/ContactDesktop.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Desktop/Circle.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Desktop/ModalImage.js",["169","170"],"import React, { useRef, useEffect } from \"react\";\n\nimport { motion, useMotionValue, animate } from \"framer-motion\";\nexport default function ModalImage({\n  i,\n  photo,\n  slideIndex,\n  tranSwipe,\n  direction,\n}) {\n  const imageVariants = {\n    initial: { opacity: 0, rotateY: 20 },\n    animate: {\n      opacity: 1,\n      rotateY: 0,\n      transition: { ...tranSwipe(1), delay: 0.4 },\n    },\n    exit: { opacity: 0, rotateY: 20 },\n  };\n  const width = useRef(0);\n  const x = useMotionValue(i * width.current);\n  const s = useMotionValue(1);\n  const r = useMotionValue(0);\n\n  useEffect(() => {\n    const target = document.querySelector(\".modal-slider\");\n    width.current = target.getBoundingClientRect().width;\n  }, []);\n  useEffect(() => {\n    const rotate = direction.current > 0 ? 2 : -2;\n    animate(x, width.current * (i - slideIndex), tranSwipe(0.8));\n    animate(s, i === slideIndex ? 1 : 0.8, tranSwipe(0.8));\n    animate(r, [0, rotate, 0], tranSwipe(0.8));\n  }, [slideIndex]);\n  return (\n    <motion.div\n      className=\"image-container\"\n      variants={imageVariants}\n      style={{\n        x: x,\n        scale: s,\n        opacity: i === slideIndex ? 1 : 0.6,\n        rotateZ: r,\n      }}\n    >\n      <img src={photo} />\n    </motion.div>\n  );\n}\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":78,"column":6,"nodeType":"177","endLine":78,"endColumn":15,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":89,"column":6,"nodeType":"177","endLine":89,"endColumn":8,"suggestions":"180"},{"ruleId":"175","severity":1,"message":"181","line":94,"column":6,"nodeType":"177","endLine":94,"endColumn":8,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":132,"column":11,"nodeType":"185","endLine":132,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":15,"column":3,"nodeType":"188","messageId":"189","endLine":15,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":83,"column":6,"nodeType":"177","endLine":83,"endColumn":15,"suggestions":"190"},{"ruleId":"175","severity":1,"message":"191","line":93,"column":6,"nodeType":"177","endLine":93,"endColumn":9,"suggestions":"192"},{"ruleId":"183","severity":1,"message":"184","line":119,"column":13,"nodeType":"185","endLine":119,"endColumn":36},{"ruleId":"175","severity":1,"message":"179","line":48,"column":6,"nodeType":"177","endLine":48,"endColumn":8,"suggestions":"193"},{"ruleId":"175","severity":1,"message":"179","line":26,"column":6,"nodeType":"177","endLine":26,"endColumn":8,"suggestions":"194"},{"ruleId":"175","severity":1,"message":"195","line":116,"column":6,"nodeType":"177","endLine":116,"endColumn":8,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"197","line":7,"column":18,"nodeType":"188","messageId":"189","endLine":7,"endColumn":27},{"ruleId":"175","severity":1,"message":"198","line":67,"column":6,"nodeType":"177","endLine":67,"endColumn":15,"suggestions":"199"},{"ruleId":"183","severity":1,"message":"184","line":91,"column":11,"nodeType":"185","endLine":91,"endColumn":51},{"ruleId":"183","severity":1,"message":"184","line":100,"column":11,"nodeType":"185","endLine":100,"endColumn":49},{"ruleId":"186","severity":1,"message":"200","line":9,"column":9,"nodeType":"188","messageId":"189","endLine":9,"endColumn":13},{"ruleId":"186","severity":1,"message":"201","line":15,"column":3,"nodeType":"188","messageId":"189","endLine":15,"endColumn":19},{"ruleId":"186","severity":1,"message":"187","line":19,"column":3,"nodeType":"188","messageId":"189","endLine":19,"endColumn":26},{"ruleId":"186","severity":1,"message":"202","line":20,"column":3,"nodeType":"188","messageId":"189","endLine":20,"endColumn":20},{"ruleId":"186","severity":1,"message":"203","line":21,"column":3,"nodeType":"188","messageId":"189","endLine":21,"endColumn":19},{"ruleId":"175","severity":1,"message":"204","line":72,"column":6,"nodeType":"177","endLine":72,"endColumn":15,"suggestions":"205"},{"ruleId":"175","severity":1,"message":"206","line":95,"column":6,"nodeType":"177","endLine":95,"endColumn":15,"suggestions":"207"},{"ruleId":"175","severity":1,"message":"208","line":34,"column":6,"nodeType":"177","endLine":34,"endColumn":8,"suggestions":"209"},{"ruleId":"210","severity":1,"message":"211","line":44,"column":31,"nodeType":"212","messageId":"213","endLine":44,"endColumn":33},{"ruleId":"210","severity":1,"message":"211","line":60,"column":33,"nodeType":"212","messageId":"213","endLine":60,"endColumn":35},{"ruleId":"175","severity":1,"message":"214","line":73,"column":6,"nodeType":"177","endLine":73,"endColumn":8,"suggestions":"215"},{"ruleId":"186","severity":1,"message":"216","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":23},{"ruleId":"175","severity":1,"message":"217","line":54,"column":6,"nodeType":"177","endLine":54,"endColumn":13,"suggestions":"218"},{"ruleId":"175","severity":1,"message":"219","line":69,"column":6,"nodeType":"177","endLine":69,"endColumn":25,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":172,"column":17,"nodeType":"185","endLine":179,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":180,"column":17,"nodeType":"185","endLine":187,"endColumn":18},{"ruleId":"186","severity":1,"message":"223","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"224","line":5,"column":3,"nodeType":"188","messageId":"189","endLine":5,"endColumn":18},{"ruleId":"186","severity":1,"message":"225","line":6,"column":3,"nodeType":"188","messageId":"189","endLine":6,"endColumn":17},{"ruleId":"186","severity":1,"message":"226","line":7,"column":3,"nodeType":"188","messageId":"189","endLine":7,"endColumn":15},{"ruleId":"186","severity":1,"message":"227","line":8,"column":3,"nodeType":"188","messageId":"189","endLine":8,"endColumn":10},{"ruleId":"175","severity":1,"message":"228","line":34,"column":6,"nodeType":"177","endLine":34,"endColumn":18,"suggestions":"229"},{"ruleId":"183","severity":1,"message":"184","line":46,"column":7,"nodeType":"185","endLine":46,"endColumn":26},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setScroll'. Either include it or remove the dependency array.","ArrayExpression",["232"],"React Hook useEffect has missing dependencies: 'c' and 'tranSwipe'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["234"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'clearAllBodyScrollLocks' is defined but never used.","Identifier","unusedVar",["235"],"React Hook useEffect has a missing dependency: 'tranSwipe'. Either include it or remove the dependency array.",["236"],["237"],["238"],"React Hook useEffect has missing dependencies: 'location.pathname', 'navbarColor', 'tranSmooth', and 'tranSwipe'. Either include them or remove the dependency array. If 'tranSwipe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["239"],"'setLength' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.",["240"],"'icon' is assigned a value but never used.","'useElementScroll' is defined but never used.","'disableBodyScroll' is defined but never used.","'enableBodyScroll' is defined but never used.","React Hook useEffect has missing dependencies: 'handleScroll', 't', 'tDelay', and 'tranSwipe'. Either include them or remove the dependency array. If 'tranSwipe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["241"],"React Hook useEffect has missing dependencies: 'disableReference', 'element.active', and 'enableReference'. Either include them or remove the dependency array. If 'disableReference' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["242"],"React Hook useEffect has missing dependencies: 'location.pathname', 'tranSmooth', and 'tranSwipe'. Either include them or remove the dependency array. If 'setIcon' needs the current value of 'tranSmooth', you can also switch to useReducer instead of useState and read 'tranSmooth' in the reducer.",["243"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'windowBlocks'. Either include it or remove the dependency array.",["244"],"'LazyLoadImage' is defined but never used.","React Hook useEffect has a missing dependency: 'project.photos'. Either include it or remove the dependency array.",["245"],"React Hook useEffect has a missing dependency: 'project.title'. Either include it or remove the dependency array.",["246"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'AnimatePresence' is defined but never used.","'useMotionValue' is defined but never used.","'useTransform' is defined but never used.","'animate' is defined but never used.","React Hook useEffect has missing dependencies: 'direction', 'i', 'r', 's', 'tranSwipe', and 'x'. Either include them or remove the dependency array. If 'tranSwipe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["247"],"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"248","fix":"254"},{"desc":"250","fix":"255"},{"desc":"250","fix":"256"},{"desc":"250","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [preview, setScroll]",{"range":"276","text":"277"},"Update the dependencies array to be: [c, tranSwipe]",{"range":"278","text":"279"},"Update the dependencies array to be: [history]",{"range":"280","text":"281"},{"range":"282","text":"277"},{"range":"283","text":"279"},{"range":"284","text":"279"},{"range":"285","text":"279"},"Update the dependencies array to be: [location.pathname, navbarColor, tranSmooth, tranSwipe]",{"range":"286","text":"287"},"Update the dependencies array to be: [active, counter]",{"range":"288","text":"289"},"Update the dependencies array to be: [element, handleScroll, t, tDelay, tranSwipe]",{"range":"290","text":"291"},"Update the dependencies array to be: [disableReference, element.active, enableReference, preview]",{"range":"292","text":"293"},"Update the dependencies array to be: [location.pathname, tranSmooth, tranSwipe]",{"range":"294","text":"295"},"Update the dependencies array to be: [windowBlocks]",{"range":"296","text":"297"},"Update the dependencies array to be: [block, project.photos]",{"range":"298","text":"299"},"Update the dependencies array to be: [load, project.title, sliderCount]",{"range":"300","text":"301"},"Update the dependencies array to be: [direction, i, r, s, slideIndex, tranSwipe, x]",{"range":"302","text":"303"},[2237,2246],"[preview, setScroll]",[2594,2596],"[c, tranSwipe]",[2687,2689],"[history]",[2456,2465],[2812,2815],[1371,1373],[867,869],[2951,2953],"[location.pathname, navbarColor, tranSmooth, tranSwipe]",[1284,1293],"[active, counter]",[1961,1970],"[element, handleScroll, t, tDelay, tranSwipe]",[2575,2584],"[disableReference, element.active, enableReference, preview]",[1469,1471],"[location.pathname, tranSmooth, tranSwipe]",[2347,2349],"[windowBlocks]",[1678,1685],"[block, project.photos]",[2241,2260],"[load, project.title, sliderCount]",[968,980],"[direction, i, r, s, slideIndex, tranSwipe, x]"]