[{"/Users/Serhan/Code/dianaguney/src/index.js":"1","/Users/Serhan/Code/dianaguney/src/App.js":"2","/Users/Serhan/Code/dianaguney/src/Pages/Home.js":"3","/Users/Serhan/Code/dianaguney/src/Pages/Projects.js":"4","/Users/Serhan/Code/dianaguney/src/Pages/Skills.js":"5","/Users/Serhan/Code/dianaguney/src/Pages/Contact.js":"6","/Users/Serhan/Code/dianaguney/src/Components/Navbar.js":"7","/Users/Serhan/Code/dianaguney/src/Components/Signature.js":"8","/Users/Serhan/Code/dianaguney/src/Components/MenuTitle.js":"9","/Users/Serhan/Code/dianaguney/src/Components/Landscape.js":"10","/Users/Serhan/Code/dianaguney/src/Components/ArrowDown.js":"11","/Users/Serhan/Code/dianaguney/src/Components/Preview.js":"12","/Users/Serhan/Code/dianaguney/src/Components/Phone.js":"13","/Users/Serhan/Code/dianaguney/src/Components/AdvancedIcon.js":"14","/Users/Serhan/Code/dianaguney/src/Projects/Projects.js":"15","/Users/Serhan/Code/dianaguney/src/Components/MenuIcon.js":"16","/Users/Serhan/Code/dianaguney/src/Components/ArrowUp.js":"17","/Users/Serhan/Code/dianaguney/src/Components/ArrowLeft.js":"18","/Users/Serhan/Code/dianaguney/src/Components/ArrowRight.js":"19","/Users/Serhan/Code/dianaguney/src/Components/Desktop/NavbarDesktop.js":"20","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/HomeDesktop.js":"21","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/ProjectsDesktop.js":"22","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Slider.js":"23","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Modal.js":"24","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/SkillsDesktop.js":"25","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/ContactDesktop.js":"26","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Circle.js":"27","/Users/Serhan/Code/dianaguney/src/Components/Desktop/ModalImage.js":"28"},{"size":188,"mtime":1611522961728,"results":"29","hashOfConfig":"30"},{"size":4498,"mtime":1611394084256,"results":"31","hashOfConfig":"30"},{"size":5404,"mtime":1611482520611,"results":"32","hashOfConfig":"30"},{"size":4330,"mtime":1611259988221,"results":"33","hashOfConfig":"30"},{"size":3124,"mtime":1610976162455,"results":"34","hashOfConfig":"30"},{"size":2253,"mtime":1610021790349,"results":"35","hashOfConfig":"30"},{"size":4549,"mtime":1611391249384,"results":"36","hashOfConfig":"30"},{"size":1091,"mtime":1611230550846,"results":"37","hashOfConfig":"30"},{"size":811,"mtime":1609255516726,"results":"38","hashOfConfig":"30"},{"size":1108,"mtime":1610566641450,"results":"39","hashOfConfig":"30"},{"size":489,"mtime":1610039367747,"results":"40","hashOfConfig":"30"},{"size":8841,"mtime":1611391797397,"results":"41","hashOfConfig":"30"},{"size":1015,"mtime":1609236216601,"results":"42","hashOfConfig":"30"},{"size":1417,"mtime":1609236216597,"results":"43","hashOfConfig":"30"},{"size":15290,"mtime":1611311561762,"results":"44","hashOfConfig":"30"},{"size":1615,"mtime":1609236216600,"results":"45","hashOfConfig":"30"},{"size":453,"mtime":1609236216599,"results":"46","hashOfConfig":"30"},{"size":462,"mtime":1609236216598,"results":"47","hashOfConfig":"30"},{"size":456,"mtime":1609236216598,"results":"48","hashOfConfig":"30"},{"size":2111,"mtime":1611400970402,"results":"49","hashOfConfig":"30"},{"size":5757,"mtime":1611523675311,"results":"50","hashOfConfig":"30"},{"size":2575,"mtime":1611401078138,"results":"51","hashOfConfig":"30"},{"size":7883,"mtime":1611401030133,"results":"52","hashOfConfig":"30"},{"size":2460,"mtime":1611400988151,"results":"53","hashOfConfig":"30"},{"size":2876,"mtime":1611082184286,"results":"54","hashOfConfig":"30"},{"size":1225,"mtime":1611083064217,"results":"55","hashOfConfig":"30"},{"size":4304,"mtime":1611400320778,"results":"56","hashOfConfig":"30"},{"size":1253,"mtime":1610976162449,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19bs676",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},"/Users/Serhan/Code/dianaguney/src/index.js",[],"/Users/Serhan/Code/dianaguney/src/App.js",[],["127","128"],"/Users/Serhan/Code/dianaguney/src/Pages/Home.js",["129","130","131","132"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\n//IMAGES\nimport homeCover from \"../Images/balconies/1.jpg\";\nimport sign from \"../SVGs/Signature.svg\";\nimport ArrowDown from \"../Components/ArrowDown\";\nimport ArrowRight from \"../Components/ArrowRight\";\nimport projectsIcon from \"../Icons/projectsIcon.svg\";\n\n//COMPONENTS\nimport Navbar from \"../Components/Navbar\";\nimport Preview from \"../Components/Preview\";\n\n//ADDITIONAL\nimport { motion, useAnimation, useCycle, useMotionValue } from \"framer-motion\";\nimport { projects } from \"../Projects/Projects\";\n\nexport default function Home({ toggle, transition }) {\n  //STATES\n  const { menuOpen, setMenuOpen } = toggle;\n\n  const [elements, setElements] = useState(projects);\n  const [preview, setPreview] = useState(false);\n\n  //VARIABLES\n  const { tranSwipe, tranSmooth } = transition;\n  const location = useLocation();\n  const history = useHistory();\n\n  const [hide, cycleHide] = useCycle(\n    {\n      opacity: 1,\n      transition: { delay: 0.8, ...tranSwipe(0.8) },\n    },\n    {\n      opacity: 0,\n      transition: tranSwipe(0.8),\n    }\n  );\n\n  //ANIMATION\n  //this will be used to animate the scrolling of the window when element is active\n  const scroll = useMotionValue(0);\n  function setScroll() {\n    scroll.set(window.scrollY);\n  }\n  const disablePreviewScroll = (reference) => {\n    if (reference) {\n      console.log(\"reference\", reference);\n      // disableBodyScroll(reference);\n    }\n  };\n\n  const enablePreviewScroll = (reference) => {\n    if (reference) {\n      console.log(\"reference\", reference);\n    }\n  };\n  //we set the scroll motionvalue to window.scrollY so it doesn't scroll from the top everytime.\n  useEffect(() => {\n    let targetElement = document.querySelector(\"html\");\n\n    if (!preview) {\n      window.addEventListener(\"scroll\", setScroll);\n      enablePreviewScroll();\n      targetElement.classList.remove(\"no-scroll\");\n    } else {\n      window.removeEventListener(\"scroll\", setScroll);\n      disablePreviewScroll();\n      targetElement.classList.add(\"no-scroll\");\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", setScroll);\n    };\n  }, [preview]);\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n\n  useEffect(() => {\n    //clear history on component mount\n    history.replace();\n  }, []);\n  return (\n    <motion.div className=\"home-page\" transition={tranSwipe(1)}>\n      <motion.div\n        className=\"page-transition-element\"\n        initial={location.state ? { width: \"100%\" } : \"\"}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n      ></motion.div>\n\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n        preview={preview}\n      />\n      <motion.div\n        className=\"home-content\"\n        transition={{ delay: 0.4, ...tranSwipe(0.8) }}\n      >\n        <div className=\"cover-image\">\n          <div className=\"overlay\"></div>\n          <img src={homeCover} alt=\"Cover\" />\n        </div>\n        <motion.div className=\"introduction-section\" animate={hide}>\n          <h1>Architecture</h1>\n          <h1>{`&`} Illustrations</h1>\n          <h4>\n            I am a passionate designer with love for story telling through\n            architecture and cinema.\n          </h4>\n          <p>\n            My background is in Architecture and design and I have a major\n            interest for film and set design. Combining digital media and\n            physcial modeling I love to come up with new designs, scenes and\n            stories to tell. I Have a record of working with model making,\n            graphical and technical presentations, conceptual design and art,\n            sketches and drawings.\n          </p>\n          <img src={sign} />\n          <div className=\"scroll-for-more\">\n            <p>scroll for projects</p>\n            <ArrowDown />\n          </div>\n        </motion.div>\n        <div className=\"home-projects-section\">\n          {elements.map(\n            (element, index) =>\n              index < 3 && (\n                <Preview\n                  key={index}\n                  index={index}\n                  state={{ elements, element, setElements }}\n                  toggle={{ preview, setPreview }}\n                  toggleHide={{ hide, cycleHide }}\n                  tranSwipe={tranSwipe}\n                  scroll={scroll}\n                  enableReference={enablePreviewScroll}\n                  disableReference={disablePreviewScroll}\n                />\n              )\n          )}\n          <img\n            className=\"projects-icon\"\n            src={projectsIcon}\n            alt=\"projects-icon\"\n          />\n          <Link to={{ pathname: \"/projects\", state: true }}>\n            <motion.button className=\"link-button\" whileTap={{ scale: 0.9 }}>\n              <span>Go to Projects</span>\n            </motion.button>\n            <ArrowRight />\n          </Link>\n        </div>\n        <div className=\"footer\"></div>\n      </motion.div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Projects.js",["133","134","135","136","137","138"],"import React, { useEffect, useState } from \"react\";\n\n//PAGES\nimport Navbar from \"../Components/Navbar\";\nimport Preview from \"../Components/Preview\";\n//IMAGES\nimport ArrowDown from \"../Components/ArrowDown\";\nimport pageCover from \"../Images/furniture/ProjectsCover.jpg\";\n//ADDITIONALS\nimport { motion, useAnimation, useCycle, useMotionValue } from \"framer-motion\";\n\n//PROJECTS\nimport { projects } from \"../Projects/Projects\";\nimport {\n  clearAllBodyScrollLocks,\n  disableBodyScroll,\n  enableBodyScroll,\n} from \"body-scroll-lock\";\n\nexport default function Projects({ toggle, transition }) {\n  //STATES\n  const [preview, setPreview] = useState(false);\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n  const [elements, setElements] = useState(projects);\n\n  //the cyle animation is for inactive elements to disappear when an element is activated.\n  //it needs to be defined in the parent component this way we only have one toggle that controls all children separately.\n  //we use a ternary to animate each component separately {!element.active ? hide : \"\"}\n  const [hide, cycleHide] = useCycle(\n    {\n      opacity: 1,\n      transition: { delay: 0.8, ...tranSwipe(0.8) },\n    },\n    {\n      opacity: 0,\n      transition: tranSwipe(0.8),\n    }\n  );\n  //start from the top of the page\n  useEffect(() => {\n    const scroll = window.scrollY;\n    if (scroll !== 0) {\n      window.scrollTo(0, 0);\n    }\n  }, []);\n\n  //this will be used to animate the scrolling of the window when element is active\n  const scroll = useMotionValue(0);\n  function setScroll() {\n    scroll.set(window.scrollY);\n  }\n\n  const disablePreviewScroll = (reference) => {\n    if (reference) {\n      // disableBodyScroll(reference);\n      console.log(\"disable reference\", reference);\n    }\n  };\n\n  const enablePreviewScroll = (reference) => {\n    if (reference) {\n      console.log(\"enable reference\", reference);\n      // enableBodyScroll(reference);\n    }\n  };\n\n  //we set the scroll motionvalue to window.scrollY so it doesn't scroll from the top everytime.\n  useEffect(() => {\n    let targetElement = document.querySelector(\"html\");\n    if (!preview) {\n      window.addEventListener(\"scroll\", setScroll);\n      enablePreviewScroll();\n      targetElement.classList.remove(\"no-scroll\");\n    } else {\n      targetElement.classList.add(\"no-scroll\");\n      window.removeEventListener(\"scroll\", setScroll);\n      disablePreviewScroll();\n    }\n\n    return () => {\n      window.removeEventListener(\"scroll\", setScroll);\n    };\n  }, [preview]);\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, [c]);\n\n  return (\n    <div className=\"projects-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n        preview={preview}\n      />\n\n      <motion.div className=\"projects-content\">\n        <motion.div className=\"intro-to-projects\" animate={hide}>\n          <p>\n            Below you'll find the projects I did throughout my education in\n            architecture.\n          </p>\n\n          <div className=\"image-container\">\n            <img src={pageCover} />\n            <div className=\"scroll-container\">\n              <p>scroll for projects</p>\n              <ArrowDown color=\"white\" />\n            </div>\n          </div>\n        </motion.div>\n        {elements.map((element, index) => (\n          <Preview\n            key={index}\n            state={{ element, elements, setElements }}\n            toggle={{ preview, setPreview }}\n            index={index}\n            toggleHide={{ hide, cycleHide }}\n            tranSwipe={tranSwipe}\n            scroll={scroll}\n            disableReference={disablePreviewScroll}\n            enableReference={enablePreviewScroll}\n          />\n        ))}\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Skills.js",["139"],"import React, { useEffect } from \"react\";\n\n//PAGES\nimport Navbar from \"../Components/Navbar\";\nimport AdvancedIcon from \"../Components/AdvancedIcon\";\nimport checkIcon from \"../SVGs/CheckIcon.svg\";\n\n//ADDITIONALS\nimport { motion, useAnimation } from \"framer-motion\";\n\nexport const skills = [\n  {\n    title: \"2D Modeling\",\n    list: [{ name: \"AutoCad 2D\", advanced: true }],\n  },\n  {\n    title: \"3D Modeling\",\n    list: [\n      { name: \"Rhino 3D\", advanced: true },\n      { name: \"Sketch-up 3D\", advanced: false },\n      { name: \"Microstation\", advanced: true },\n      { name: \"3D point cloud\", advanced: true },\n      { name: \"Physical Modelling\", advanced: true },\n    ],\n  },\n  {\n    title: \"Editing\",\n    list: [\n      { name: \"Photoshop CS6\", advanced: true },\n      { name: \"Indesign CS6\", advanced: true },\n      { name: \"Illustrator CS6\", advanced: true },\n    ],\n  },\n];\nexport default function Skills({ toggle, transition }) {\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n  return (\n    <div className=\"skills-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n      />\n      <motion.div className=\"skills-content\">\n        <div className=\"skills-text\">\n          <p>\n            I work with&nbsp;\n            <span>\n              3D design {\"&\"} modelling, 2D illustrations and sketching and\n              editing with Adobe CS6.\n            </span>\n          </p>\n        </div>\n        <div className=\"skills-info\">\n          <div className=\"row\">\n            <AdvancedIcon advanced={true} />\n            <p>Advanced</p>\n          </div>\n          <div className=\"row\">\n            <AdvancedIcon advanced={false} />\n            <p>Intermediate</p>\n          </div>\n          <div className=\"row\"></div>\n        </div>\n        <div className=\"skills-section\">\n          <div className=\"column\">\n            {skills.map((item, index) => (\n              <div className=\"skill-container\">\n                <h2>{item.title}</h2>\n                <div className=\"skill-list-container\">\n                  {item.list.map((el, i) => (\n                    <div className=\"skill-row\">\n                      <img src={checkIcon} alt=\"check\" />\n                      <p>{el.name}</p>\n                      <AdvancedIcon advanced={el.advanced} />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Contact.js",["140"],"import React, { useEffect } from \"react\";\n//PAGES\nimport Navbar from \"../Components/Navbar\";\n\n//IMAGES\nimport pageCover from \"../Images/paperTubes/ContactCover.jpg\";\nimport email from \"../Icons/contactIcon.svg\";\nimport phone from \"../Icons/phoneIcon.svg\";\nimport signature from \"../SVGs/Signature.svg\";\n//ADDITIONALS\nimport { motion, useAnimation } from \"framer-motion\";\n\nexport default function Contact({ toggle, transition }) {\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n  return (\n    <div className=\"contact-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n      />\n      <motion.div className=\"contact-content\">\n        <div className=\"info-container\">\n          <div className=\"text-aligner\">\n            <p>\n              Thank you for taking the time to browse through what I’ve been\n              doing. You can reach me using the contact information below.\n            </p>\n          </div>\n          <div className=\"signature\">\n            <img src={signature} alt=\"signature\" />\n          </div>\n          <h2>Contact Information</h2>\n          <div className=\"email-container\">\n            <img src={email} alt=\"email\" />\n            <p>diana.guney.93@gmail.com</p>\n          </div>\n          <div className=\"phone-container\">\n            <img src={phone} alt=\"phone\" />\n            <p>+46 73 779 99 93</p>\n          </div>\n        </div>\n        <div className=\"image-container\">\n          <div className=\"overlay\"></div>\n          <img src={pageCover} alt=\"contact-cover\" />\n        </div>\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Navbar.js",["141"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\n//COMPONENTS\nimport MenuIcon from \"./MenuIcon\";\nimport Signature from \"./Signature\";\nimport MenuTitle from \"./MenuTitle\";\n\n//ADDITIONALS\nimport { motion, useAnimation } from \"framer-motion\";\n\n//IMAGES\nimport contactIcon from \"../Icons/contactIcon.svg\";\nimport projectsIcon from \"../Icons/projectsIcon.svg\";\nimport skillsIcon from \"../Icons/skillsIcon.svg\";\nimport homeIcon from \"../Icons/meIcon.svg\";\n\nexport const menuItems = [\n  {\n    icon: projectsIcon,\n    title: \"Projects\",\n    text: \"PROJECTS\",\n    link: \"projects\",\n    fromDashboard: false,\n  },\n  {\n    icon: skillsIcon,\n    title: \"Skills\",\n    text: \"SKILLS\",\n    link: \"skills\",\n    fromDashboard: false,\n  },\n  {\n    icon: contactIcon,\n    title: \"Contact\",\n    text: \"CONTACT\",\n    link: \"contact\",\n    fromDashboard: false,\n  },\n  {\n    icon: homeIcon,\n    title: \"Home\",\n    text: \"DIANA GUNEY\",\n    link: \"\",\n    fromDashboard: true,\n  },\n];\nexport default function Navbar({ toggle, tranSwipe, tranSmooth, preview }) {\n  //STATES\n  const [icon, setIcon] = useState(\"\");\n  const { menuOpen, setMenuOpen } = toggle;\n\n  //VARIABLES\n  const location = useLocation();\n\n  const filteredItems = menuItems.filter(\n    (item) => location.pathname === `/${item.link}`\n  );\n  const mainTitle = filteredItems[0].text.split(\"\");\n  //VARIANTS\n  const parentVariants = {\n    initial: { opacity: 1 },\n    animate: { opacity: 1 },\n  };\n  const menuVariants = {\n    initial: {\n      height: 0,\n      transition: {\n        ...tranSwipe(0.4),\n        delay: 0.2,\n        staggerChildren: 0.05,\n        staggerDirection: -1,\n      },\n    },\n    animate: {\n      height: 300,\n      transition: {\n        ...tranSwipe(0.4),\n        staggerChildren: 0.05,\n      },\n    },\n  };\n  const itemVariants = {\n    initial: { y: 20, opacity: 0, transition: tranSmooth(0.2) },\n    animate: { y: 0, opacity: 1, transition: tranSmooth(0.2) },\n  };\n  const navbarColor = useAnimation();\n\n  const backgroundVariants = {\n    initial: { opacity: 0, transition: { ...tranSwipe(0.4), delay: 0.3 } },\n    animate: { opacity: 1, transition: { ...tranSwipe(0.4) } },\n  };\n  //setting the menu icon and the background color based on the page selection\n  useEffect(() => {\n    const item = menuItems.filter(\n      (item) => `/${item.link}` === location.pathname\n    );\n    if (location.pathname === \"/\") {\n      setIcon(<Signature tranSwipe={tranSwipe} tranSmooth={tranSmooth} />);\n      navbarColor.start({ backgroundColor: \"#ffffff\" });\n    } else {\n      setIcon(\n        <div className=\"menu-icon\">\n          <motion.img\n            src={item[0].icon}\n            alt={item[0].title}\n            initial={{ y: 70 }}\n            animate={{ y: 0 }}\n            transition={tranSwipe(1)}\n            exit={{ y: 70 }}\n          />\n        </div>\n      );\n      navbarColor.start({ backgroundColor: \"#fff8f0\" });\n    }\n  }, []);\n  // useEffect(() => console.log(preview), [preview]);\n\n  return (\n    <motion.div className=\"navbar-container\">\n      <motion.div\n        className=\"background freeze\"\n        initial=\"initial\"\n        exit=\"initial\"\n        animate={menuOpen ? \"animate\" : \"initial\"}\n        variants={backgroundVariants}\n      ></motion.div>\n      <motion.div\n        className=\"navbar-section\"\n        initial=\"initial\"\n        animate={menuOpen ? \"animate\" : \"initial\"}\n        variants={parentVariants}\n        exit=\"initial\"\n      >\n        <motion.div\n          className=\"navbar-header\"\n          animate={navbarColor}\n          initial={{ backgroundColor: \"#fff8f0\" }}\n          transition={tranSwipe(1)}\n        >\n          <MenuIcon toggle={{ menuOpen, setMenuOpen }} />\n          <MenuTitle title={mainTitle} tranSwipe={tranSwipe} />\n          {icon}\n        </motion.div>\n        <motion.div className=\"menu-items\" variants={menuVariants}>\n          {menuItems.map((item, index) => (\n            <Link\n              to={{ pathname: `/${item.link}`, state: item.fromDashboard }}\n              key={index}\n            >\n              <motion.div\n                className=\"menu-item-container\"\n                variants={itemVariants}\n                onClick={() => setMenuOpen(!menuOpen)}\n              >\n                <div className=\"menu-item\">\n                  <img src={item.icon} alt={item.title} />\n                </div>\n                <h4>{item.title}</h4>\n              </motion.div>\n            </Link>\n          ))}\n        </motion.div>\n      </motion.div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Signature.js",[],"/Users/Serhan/Code/dianaguney/src/Components/MenuTitle.js",["142"],"import React, { useState } from \"react\";\n\n//ADDITIONAOLS\nimport { motion } from \"framer-motion\";\n\nexport default function MenuTitle({ title, tranSwipe }) {\n  const [length, setLength] = useState(title);\n  const parent = {\n    initial: { y: 0, transition: { staggerChildren: 0.008 } },\n    animate: { y: 0, transition: { staggerChildren: 0.008 } },\n  };\n\n  const children = {\n    initial: { y: 30, transition: tranSwipe(0.4) },\n    animate: { y: 0, transition: tranSwipe(1) },\n  };\n  return (\n    <motion.div\n      className=\"title-container\"\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"initial\"\n      variants={parent}\n    >\n      {length.map((letter, index) => (\n        <motion.span key={index} variants={children}>\n          {letter}\n        </motion.span>\n      ))}\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Landscape.js",["143"],"import React, { useEffect } from \"react\";\n\nimport { motion } from \"framer-motion\";\nimport Phone from \"./Phone\";\n\nexport default function Landscape() {\n  //classes\n\n  const icon = {\n    boxShadow: \"4px 4px 16px rgba(0,0,0,0.3)\",\n  };\n  useEffect(() => {\n    const targetElement = document.querySelector(\".landscape-text\");\n    targetElement.scrollIntoView({ behavior: \"smooth\" });\n    window.scrollTo({\n      top: \"40px\",\n      behavior: \"smooth\",\n    });\n  }, []);\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 2 }}\n      className=\"landscape\"\n    >\n      <div className=\"landscape-text\">\n        <h1>Move to Portrait Mode please</h1>\n        <p>\n          This is a portrait-only website. I'd kindly like to ask you to use my\n          website in portrait mode please.\n        </p>\n        <h2>Thank you :)</h2>\n      </div>\n      <div className=\"landscape-visual\">\n        <div className=\"phone-container\">\n          <div className=\"phone\">\n            <Phone />\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/ArrowDown.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Preview.js",["144","145","146","147"],"import React, { useRef, useEffect } from \"react\";\nimport ArrowUp from \"./ArrowUp\";\nimport ArrowLeft from \"./ArrowLeft\";\nimport ArrowRight from \"./ArrowRight\";\nimport ArrowDown from \"./ArrowDown\";\n// import SwipeIcon from \"../SVGs/SwipeIcon.svg\";\n\n//ADDITIONALS\nimport {\n  animate,\n  motion,\n  useMotionValue,\n  useTransform,\n  AnimatePresence,\n} from \"framer-motion\";\n\nimport {\n  clearAllBodyScrollLocks,\n  disableBodyScroll,\n  enableBodyScroll,\n} from \"body-scroll-lock\";\n\nexport default function Preview({\n  state,\n  index,\n  tranSwipe,\n  toggle,\n  toggleHide,\n  scroll,\n  enableReference,\n  disableReference,\n}) {\n  //STATES\n  const refContainer = useRef(null);\n  const refSlider = useRef(null);\n  const { element, elements, setElements } = state;\n  const { preview, setPreview } = toggle;\n  const { hide, cycleHide } = toggleHide;\n\n  //ANIMATIONS\n\n  //t is used to animate towards preview mode\n  const t = useMotionValue(0);\n\n  const height = useTransform(t, [0, 500], [420, window.innerHeight]);\n  const enlargeWidth = useTransform(t, [0, 500], [\"70%\", \"130%\"]);\n  const fadeOut = useTransform(t, [0, 500], [1, 0]);\n  const slideOut = useTransform(t, [0, 500], [0, 30]);\n  const slideUp = useTransform(t, [0, 500], [0, -100]);\n  const tDelay = useMotionValue(0);\n  const delaySlideIn = useTransform(tDelay, [0, 500], [25, 0]);\n  const delayFadeIn = useTransform(tDelay, [0, 500], [0, 1]);\n\n  //d animates the description part in preview\n  const d = useMotionValue(0);\n\n  const dExpand = useTransform(d, [0, 500], [0, -350]);\n  const dFadeIn = useTransform(d, [0, 500], [0, 1]);\n  const dFadeOut = useTransform(d, [0, 500], [1, 0]);\n  const dSlide = useTransform(d, [0, 500], [\"0%\", \"-100%\"]);\n\n  //HANDLER FUNCTIONS\n\n  function handleOpen(index) {\n    //set navbar z-index\n    const navbar = document.querySelector(\".navbar-container\");\n    navbar.classList.add(\"behind\");\n    //Element activation is required to handle animations of the page.\n    //Whichever element is active thats what we'll animate.\n    const array = elements.map((el, i) => {\n      if (index === i) {\n        if (el.active) {\n          return { ...el, active: false };\n        } else {\n          return { ...el, active: true };\n        }\n      } else {\n        return { ...el, active: false };\n      }\n    });\n\n    setElements(array);\n\n    //preview is required for the page elements outisde element.map(); like navbar.\n    //We can't send the element.active information simply because these elements are outside the map loop.\n    setPreview(true);\n    cycleHide();\n  }\n\n  function handleClose() {\n    if (preview) {\n      const array = elements.map((el) => {\n        if (el.active) {\n          return { ...el, active: false };\n        } else;\n        return el;\n      });\n\n      cycleHide();\n      setElements(array);\n      setPreview(false);\n    }\n    setTimeout(() => {\n      const navbar = document.querySelector(\".navbar-container\");\n      navbar.classList.remove(\"behind\");\n    }, 1500);\n  }\n  //trigger animation and handlescroll in preview\n\n  useEffect(() => {\n    if (!element.active) {\n      animate(t, 0, { delay: 0.5, ...tranSwipe(0.8) });\n      animate(tDelay, 0, tranSwipe(0.8));\n    } else {\n      handleScroll();\n    }\n  }, [element]);\n\n  function handleScroll() {\n    const unsubscribe = scroll.onChange((value) => {\n      window.scrollTo({\n        top: value,\n      });\n    });\n\n    //when pressed see more handles the scroll so that the element is in the middle of the screen\n    //triggers the rest of the animations.\n    if (refContainer.current) {\n      if (element.active) {\n        let container = refContainer.current.getBoundingClientRect();\n        const total = container.top + window.scrollY - window.innerHeight / 6;\n        animate(scroll, total, {\n          ...tranSwipe(1.2),\n          onComplete: () => {\n            animateElement();\n            unsubscribe();\n          },\n        });\n      }\n    }\n  }\n  function animateElement() {\n    animate(t, 500, tranSwipe(0.8));\n    animate(tDelay, 500, {\n      delay: 0.5,\n      ...tranSwipe(0.8),\n    });\n  }\n\n  return (\n    <motion.div\n      ref={refContainer}\n      id={element.id}\n      key={index}\n      className=\"project-container\"\n      animate={!element.active && hide}\n      style={{ height, marginTop: slideUp }}\n      layout\n    >\n      <motion.div\n        className=\"preview-background\"\n        animate={\n          element.active\n            ? { opacity: 1, transition: tranSwipe(0.8) }\n            : { opacity: 0, transition: { delay: 0.5, ...tranSwipe(0.8) } }\n        }\n      ></motion.div>\n      <motion.div className=\"text-container\">\n        <h2>{element.title}</h2>\n        <p>{element.text}</p>\n      </motion.div>\n      <motion.div className=\"button-section\">\n        <motion.div\n          className=\"button-container\"\n          style={{ x: slideOut, opacity: fadeOut }}\n        >\n          <motion.button\n            onClick={() => {\n              handleOpen(index);\n              disableReference(refSlider.current);\n            }}\n            className=\"primary-button\"\n          >\n            <span>See more</span>\n          </motion.button>\n          <ArrowRight />\n        </motion.div>\n        <motion.div\n          className={\n            element.active ? \"button-container\" : \"button-container freeze\"\n          }\n          style={{ x: delaySlideIn, opacity: delayFadeIn }}\n        >\n          <ArrowLeft />\n          <motion.button\n            onClick={() => {\n              handleClose(index);\n              enableReference(refSlider.current);\n            }}\n            className=\"primary-button\"\n          >\n            <span>Go back</span>\n          </motion.button>\n        </motion.div>\n      </motion.div>\n      <motion.div key={index} className=\"project-slider\" layout>\n        <motion.div\n          ref={refSlider}\n          className=\"slider-container\"\n          transition={tranSwipe(0.8)}\n          layout\n        >\n          {element.photos.map((photo, i) => (\n            <motion.div\n              key={i}\n              className=\"image-container\"\n              transition={tranSwipe(0.8)}\n              style={{ width: enlargeWidth }}\n              layout\n            >\n              <div className=\"image-layout\">\n                <motion.img\n                  src={photo}\n                  alt={i}\n                  transition={tranSwipe(0.8)}\n                  layout\n                />\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </motion.div>\n\n      <motion.div\n        className=\"description-background\"\n        style={{ opacity: dFadeIn }}\n      ></motion.div>\n      <AnimatePresence>\n        {element.active && (\n          <motion.div\n            className=\"project-description\"\n            initial={{ x: 30, opacity: 0 }}\n            animate={{\n              x: 0,\n              opacity: 1,\n              transition: { delay: 1.5, ...tranSwipe(0.8) },\n            }}\n            exit={{ x: 30, opacity: 0, height: 0, transition: tranSwipe(0.6) }}\n            style={{ y: dExpand }}\n            layout\n          >\n            <motion.div\n              className=\"description-overlay\"\n              style={{ opacity: dFadeOut }}\n            ></motion.div>\n            <div className=\"description-title\">\n              <h3>Description</h3>\n              <div className=\"info-container\">\n                <motion.div\n                  className=\"button-container\"\n                  style={{ x: dSlide, opacity: dFadeOut }}\n                >\n                  <button\n                    className=\"primary-button\"\n                    onClick={() => {\n                      d.current === 0\n                        ? animate(d, 500, { ...tranSwipe(0.6) })\n                        : animate(d, 0, { ...tranSwipe(0.6) });\n                    }}\n                  >\n                    <span style={{ fontSize: \"16px\" }}>Press for more</span>\n                  </button>\n                  <ArrowUp />\n                </motion.div>\n                <motion.div\n                  className=\"button-container\"\n                  style={{ x: dSlide, opacity: dFadeIn }}\n                >\n                  <button\n                    className=\"primary-button\"\n                    onClick={() => {\n                      d.current === 0\n                        ? animate(d, 500, { ...tranSwipe(0.6) })\n                        : animate(d, 0, { ...tranSwipe(0.6) });\n                    }}\n                  >\n                    <span style={{ fontSize: \"16px\" }}>Press for less</span>\n                  </button>\n                  <ArrowDown />\n                </motion.div>\n              </div>\n            </div>\n            <div className=\"description\">\n              <p>{element.paragraph}</p>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Phone.js",[],"/Users/Serhan/Code/dianaguney/src/Components/AdvancedIcon.js",[],"/Users/Serhan/Code/dianaguney/src/Projects/Projects.js",[],"/Users/Serhan/Code/dianaguney/src/Components/MenuIcon.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowUp.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowLeft.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowRight.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Desktop/NavbarDesktop.js",["148","149"],"import React, { useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nimport { menuItems } from \"../Navbar\";\nimport { motion } from \"framer-motion\";\n\nexport default function NavbarDesktop({ tranSwipe, tranSmooth }) {\n  //define location to anticipate user's paths based on which page he is coming from.\n  //ITEM MATCH - we'll use location.pathname to match the menu links and location.state to distinguish navigation from homepage\n  const location = useLocation();\n\n  //ICON MATCH - we'll use the icon state to match the global menu icon with the appropriate page icon\n  const [icon, setIcon] = useState(null);\n\n  //TITLE MATCH - we'll send the page title to MenuTitle component to animate it.\n  const filteredItems = menuItems.filter((item) => `/${item.link}` === \"/\");\n  const mainTitle = filteredItems[0].text.split(\"\");\n\n  //ICON MATCH - we'll use location to do the icon matchin via useEffect\n  useEffect(() => {\n    const item = menuItems.filter(\n      (item) => `/${item.link}` === location.pathname\n    );\n    setIcon(<img src={item[0].icon} alt={item[0].title} />);\n  }, []);\n\n  return (\n    <motion.div\n      className=\"navbar-desktop\"\n      initial={{ opacity: 1 }}\n      exit={{ opacity: 1 }}\n    >\n      <span className=\"icon-container\">\n        <motion.div\n          className=\"menu-icon\"\n          initial={{ y: \"100%\", opacity: 0 }}\n          animate={{ y: \"0%\", opacity: 1 }}\n          exit={{ y: \"-100%\", opacity: 0 }}\n          transition={tranSwipe(0.8)}\n        >\n          {icon}\n        </motion.div>\n      </span>\n      <Link to={{ pathname: \"/\", state: false }}>\n        <div className=\"menu-title\">\n          <h2>DIANA GUNEY</h2>\n        </div>\n      </Link>\n      <div className=\"menu-items\">\n        {menuItems.map(\n          (item, index) =>\n            item.title !== \"Home\" && (\n              <Link\n                key={index}\n                to={{ pathname: `/${item.link}`, state: item.fromDashboard }}\n              >\n                <h3>{item.text}</h3>\n              </Link>\n            )\n        )}\n      </div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Desktop/HomeDesktop.js",["150","151"],"/Users/Serhan/Code/dianaguney/src/Pages/Desktop/ProjectsDesktop.js",["152","153","154"],"import React, { useEffect, useState } from \"react\";\nimport Slider from \"../../Components/Desktop/Slider\";\nimport { projects } from \"../../Projects/Projects\";\nimport NavbarDesktop from \"../../Components/Desktop/NavbarDesktop\";\n\nexport default function ProjectsDesktop({ transition }) {\n  const { tranSwipe } = transition;\n\n  //windowBlocks is for determining the available types of sliders.\n  const windowBlocks = [\n    { size: 800, width: `${100 / 4}%`, count: 4 },\n    { size: 1100, width: `${100 / 5}%`, count: 5 },\n    { size: 3000, width: `${100 / 6}%`, count: 6 },\n  ];\n\n  //block is for selecting the current slider type from the available types.\n  const [block, setBlock] = useState({});\n\n  useEffect(() => {\n    //set the block type on load\n    if (window.innerWidth > 1100) {\n      setBlock({\n        size: window.innerWidth,\n        width: `${100 / 6}%`,\n        count: 6,\n      });\n    } else if (window.innerWidth < 1100 && window.innerWidth > 800) {\n      setBlock({\n        size: window.innerWidth,\n        width: `${100 / 5}%`,\n        count: 5,\n      });\n    } else if (window.innerWidth < 800) {\n      setBlock({\n        size: window.innerWidth,\n        width: `${100 / 4}%`,\n        count: 4,\n      });\n    }\n    //setting the block type on resize\n    window.addEventListener(\"resize\", () => {\n      const filteredBlock = [];\n      windowBlocks.map((item) => {\n        if (window.innerWidth < item.size) {\n          filteredBlock.push(item);\n        }\n      });\n      //   use reduce to select the smallest in filteredBlock\n      const smallest = filteredBlock.reduce(\n        (min, item) => (min.size < item.size ? min : item),\n        filteredBlock[0]\n      );\n      setBlock(smallest);\n    });\n    return () => {\n      window.removeEventListener(\"resize\", () => {\n        const filteredBlock = [];\n        windowBlocks.map((item) => {\n          if (window.innerWidth < item.size) {\n            filteredBlock.push(item);\n          }\n        });\n        //   use reduce to select the smallest in filteredBlock\n        const smallest = filteredBlock.reduce(\n          (min, item) => (min.size < item.size ? min : item),\n          filteredBlock[0]\n        );\n        setBlock(smallest);\n      });\n    };\n  }, []);\n  //setting the image count using the current block\n\n  return (\n    <div className=\"projects\">\n      <NavbarDesktop tranSwipe={tranSwipe} />\n      {projects.map((project, index) => (\n        <Slider\n          key={index}\n          project={project}\n          tranSwipe={tranSwipe}\n          block={block}\n        />\n      ))}\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Slider.js",["155","156","157","158","159","160"],"import React, { useEffect, useState, useRef } from \"react\";\n\nimport ArrowUp from \"../ArrowUp\";\nimport ArrowDown from \"../ArrowDown\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\nimport Modal from \"./Modal\";\nimport {\n  AnimatePresence,\n  motion,\n  useMotionValue,\n  animate,\n  useTransform,\n} from \"framer-motion\";\nimport { clamp } from \"lodash-es\";\n\nexport default function Slider({ tranSwipe, project, block }) {\n  const [sliderCount, setSliderCount] = useState([]);\n  const [modal, setModal] = useState({ active: false, element: null });\n\n  //load is required to hold on until DOM is loaded\n  const [load, setLoad] = useState(false);\n\n  //progress to prevent intervening animate() in progress\n  const [progress, setProgress] = useState(false);\n\n  const slide = useMotionValue(0);\n\n  //paragraph animations\n  const paragraph = useMotionValue(0);\n  const pDown = useTransform(paragraph, [0, 100], [\"100%\", \"0%\"]);\n  //slideLimit and maskIndex is required to set limits to user swipes\n  const slideLimit = useRef(0);\n  const maskIndex = useRef(0);\n\n  //fallback is required to tell the user the direction of slider arrows with animations\n  const fallback = useRef(0);\n\n  //width is required to get the slider mask width\n  const width = useRef(0);\n\n  useEffect(() => {\n    setLoad(true);\n    if (block.count) {\n      //set the image block thresholds for how many slider-masks we'll have\n      const division = project.photos.reduce((thresholds, photo, index) => {\n        if ((index / block.count) % 1 === 0) {\n          thresholds.push(index);\n        }\n        return thresholds;\n      }, []);\n\n      setSliderCount(division);\n    }\n  }, [block]);\n\n  useEffect(() => {\n    //set width of slider mask\n    if (load && sliderCount.length > 0) {\n      const target = document.getElementById(`${project.title}-slider`);\n      const children = Array.from(target.querySelectorAll(\".slider-mask\"));\n      slideLimit.current = children.length;\n      width.current =\n        children[0].getBoundingClientRect().width - window.innerWidth * 0.05;\n    } else {\n      return;\n    }\n  }, [load, sliderCount]);\n\n  useEffect(() => {\n    const target = document.querySelector(\"html\");\n    if (modal.active) {\n      target.classList.add(\"no-scroll\");\n    } else {\n      target.classList.remove(\"no-scroll\");\n    }\n  }, [modal]);\n  function slideAway(direction) {\n    //animate the slider mask slidings within set limitations\n    //using maskIndex I set the limits for the user's swipe actions\n    maskIndex.current = clamp(\n      -1,\n      maskIndex.current - direction,\n      slideLimit.current\n    );\n\n    if (maskIndex.current < 0) {\n      //this is for when you reach zero limit where there is nothing to show\n      animate(slide, [slide.current, slide.current + 10, slide.current], {\n        duration: 0.3,\n      });\n      maskIndex.current = 0;\n    } else if (\n      maskIndex.current > -1 &&\n      maskIndex.current < slideLimit.current\n    ) {\n      setProgress(true);\n      //delta is the difference we set later on in winkAnimate with fallback\n\n      animate(slide, slide.current + width.current * direction, tranSwipe(0.8));\n    } else if (maskIndex.current === slideLimit.current) {\n      animate(slide, [slide.current, slide.current - 10, slide.current], {\n        duration: 0.3,\n      });\n      maskIndex.current = slideLimit.current - 1;\n    }\n  }\n  return (\n    <>\n      {load && (\n        <motion.div\n          className=\"project-container\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1, transition: tranSwipe(0.8) }}\n          exit={{ opacity: 0, transition: { delay: 1 } }}\n        >\n          <AnimatePresence>\n            {modal.active && (\n              <Modal modalObject={{ modal, setModal }} tranSwipe={tranSwipe} />\n            )}\n          </AnimatePresence>\n          <motion.div\n            className=\"button-container\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { delay: 2, ...tranSwipe(1) } }}\n            exit={{ opacity: 0, transition: { delay: 0.2 } }}\n          >\n            <ArrowUp />\n            <button onClick={() => animate(paragraph, 100, tranSwipe(1))}>\n              Read more\n            </button>\n          </motion.div>\n          <motion.div\n            className=\"paragraph-container\"\n            initial={{ y: window.innerHeight }}\n            style={{ y: pDown }}\n          >\n            <div className=\"button-container\">\n              <ArrowDown />\n              <button onClick={() => animate(paragraph, 0, tranSwipe(1))}>\n                Read less\n              </button>\n            </div>\n            <h2>Description</h2>\n            <p>{project.paragraph}</p>\n          </motion.div>\n\n          <div className=\"text-container\">\n            <div className=\"introduction\">\n              <span>\n                <motion.h2\n                  initial={{ y: \"100%\" }}\n                  animate={{\n                    y: \"0%\",\n                    transition: { delay: 1.2, ...tranSwipe(1) },\n                  }}\n                  exit={{\n                    y: \"-100%\",\n                    transition: { delay: 0.2, ...tranSwipe(0.8) },\n                  }}\n                >\n                  {project.title}\n                </motion.h2>\n              </span>\n              <span>\n                <motion.p\n                  initial={{ y: \"100%\" }}\n                  animate={{\n                    y: \"0%\",\n                    transition: { delay: 1.4, ...tranSwipe(1) },\n                  }}\n                  exit={{ y: \"-100%\", transition: tranSwipe(0.8) }}\n                >\n                  {project.text}\n                </motion.p>\n              </span>\n            </div>\n          </div>\n          <motion.div\n            className=\"slider-container\"\n            id={`${project.title}-slider`}\n            initial={{ y: \"10%\", opacity: 0 }}\n            animate={{\n              y: \"0%\",\n              opacity: 1,\n              transition: { delay: 1.6, ...tranSwipe(1) },\n            }}\n            exit={{\n              y: \"-10%\",\n              opacity: 0,\n              transition: { delay: 0.2, ...tranSwipe(1) },\n            }}\n          >\n            {sliderCount.length > 1 && (\n              <>\n                <a onClick={() => slideAway(1)}>{`<`}</a>\n                <a onClick={() => slideAway(-1)}>{`>`}</a>\n              </>\n            )}\n            {sliderCount.map((slider, i) => (\n              <motion.div key={i} className=\"slider-mask\" style={{ x: slide }}>\n                {project.photos.map(\n                  (photo, index) =>\n                    index < block.count + slider &&\n                    index > slider - 1 && (\n                      <div\n                        key={index}\n                        className=\"card\"\n                        style={{ width: block.width }}\n                        onClick={() =>\n                          setModal({\n                            active: true,\n                            element: project,\n                            index: index,\n                          })\n                        }\n                      >\n                        <motion.div\n                          className=\"slider-image-container\"\n                          custom={index}\n                          whileHover={{\n                            scale: 1.1,\n                            zIndex: 5,\n                          }}\n                        >\n                          <img\n                            className=\"slider-image\"\n                            effect=\"blur\"\n                            src={photo}\n                            alt={index}\n                          />\n                        </motion.div>\n                      </div>\n                    )\n                )}\n              </motion.div>\n            ))}\n          </motion.div>\n        </motion.div>\n      )}\n    </>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Desktop/Modal.js",[],"/Users/Serhan/Code/dianaguney/src/Pages/Desktop/SkillsDesktop.js",[],"/Users/Serhan/Code/dianaguney/src/Pages/Desktop/ContactDesktop.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Desktop/Circle.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Desktop/ModalImage.js",["161","162"],"import React, { useRef, useEffect } from \"react\";\n\nimport { motion, useMotionValue, animate } from \"framer-motion\";\nexport default function ModalImage({\n  i,\n  photo,\n  slideIndex,\n  tranSwipe,\n  direction,\n}) {\n  const imageVariants = {\n    initial: { opacity: 0, rotateY: 20 },\n    animate: {\n      opacity: 1,\n      rotateY: 0,\n      transition: { ...tranSwipe(1), delay: 0.4 },\n    },\n    exit: { opacity: 0, rotateY: 20 },\n  };\n  const width = useRef(0);\n  const x = useMotionValue(i * width.current);\n  const s = useMotionValue(1);\n  const r = useMotionValue(0);\n\n  useEffect(() => {\n    const target = document.querySelector(\".modal-slider\");\n    width.current = target.getBoundingClientRect().width;\n  }, []);\n  useEffect(() => {\n    const rotate = direction.current > 0 ? 2 : -2;\n    animate(x, width.current * (i - slideIndex), tranSwipe(0.8));\n    animate(s, i === slideIndex ? 1 : 0.8, tranSwipe(0.8));\n    animate(r, [0, rotate, 0], tranSwipe(0.8));\n  }, [slideIndex]);\n  return (\n    <motion.div\n      className=\"image-container\"\n      variants={imageVariants}\n      style={{\n        x: x,\n        scale: s,\n        opacity: i === slideIndex ? 1 : 0.6,\n        rotateZ: r,\n      }}\n    >\n      <img src={photo} />\n    </motion.div>\n  );\n}\n",{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":78,"column":6,"nodeType":"169","endLine":78,"endColumn":15,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"171","line":89,"column":6,"nodeType":"169","endLine":89,"endColumn":8,"suggestions":"172"},{"ruleId":"167","severity":1,"message":"173","line":94,"column":6,"nodeType":"169","endLine":94,"endColumn":8,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":133,"column":11,"nodeType":"177","endLine":133,"endColumn":29},{"ruleId":"178","severity":1,"message":"179","line":15,"column":3,"nodeType":"180","messageId":"181","endLine":15,"endColumn":26},{"ruleId":"178","severity":1,"message":"182","line":16,"column":3,"nodeType":"180","messageId":"181","endLine":16,"endColumn":20},{"ruleId":"178","severity":1,"message":"183","line":17,"column":3,"nodeType":"180","messageId":"181","endLine":17,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":84,"column":6,"nodeType":"169","endLine":84,"endColumn":15,"suggestions":"184"},{"ruleId":"167","severity":1,"message":"185","line":94,"column":6,"nodeType":"169","endLine":94,"endColumn":9,"suggestions":"186"},{"ruleId":"175","severity":1,"message":"176","line":120,"column":13,"nodeType":"177","endLine":120,"endColumn":36},{"ruleId":"167","severity":1,"message":"171","line":48,"column":6,"nodeType":"169","endLine":48,"endColumn":8,"suggestions":"187"},{"ruleId":"167","severity":1,"message":"171","line":26,"column":6,"nodeType":"169","endLine":26,"endColumn":8,"suggestions":"188"},{"ruleId":"167","severity":1,"message":"189","line":116,"column":6,"nodeType":"169","endLine":116,"endColumn":8,"suggestions":"190"},{"ruleId":"178","severity":1,"message":"191","line":7,"column":18,"nodeType":"180","messageId":"181","endLine":7,"endColumn":27},{"ruleId":"178","severity":1,"message":"192","line":9,"column":9,"nodeType":"180","messageId":"181","endLine":9,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":18,"column":3,"nodeType":"180","messageId":"181","endLine":18,"endColumn":26},{"ruleId":"178","severity":1,"message":"182","line":19,"column":3,"nodeType":"180","messageId":"181","endLine":19,"endColumn":20},{"ruleId":"178","severity":1,"message":"183","line":20,"column":3,"nodeType":"180","messageId":"181","endLine":20,"endColumn":19},{"ruleId":"167","severity":1,"message":"193","line":117,"column":6,"nodeType":"169","endLine":117,"endColumn":15,"suggestions":"194"},{"ruleId":"178","severity":1,"message":"195","line":17,"column":9,"nodeType":"180","messageId":"181","endLine":17,"endColumn":18},{"ruleId":"167","severity":1,"message":"196","line":25,"column":6,"nodeType":"169","endLine":25,"endColumn":8,"suggestions":"197"},{"ruleId":"167","severity":1,"message":"198","line":19,"column":6,"nodeType":"169","endLine":19,"endColumn":8,"suggestions":"199"},{"ruleId":"167","severity":1,"message":"200","line":53,"column":6,"nodeType":"169","endLine":53,"endColumn":8,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":43,"column":31,"nodeType":"204","messageId":"205","endLine":43,"endColumn":33},{"ruleId":"202","severity":1,"message":"203","line":58,"column":33,"nodeType":"204","messageId":"205","endLine":58,"endColumn":35},{"ruleId":"167","severity":1,"message":"206","line":71,"column":6,"nodeType":"169","endLine":71,"endColumn":8,"suggestions":"207"},{"ruleId":"178","severity":1,"message":"208","line":24,"column":10,"nodeType":"180","messageId":"181","endLine":24,"endColumn":18},{"ruleId":"178","severity":1,"message":"209","line":36,"column":9,"nodeType":"180","messageId":"181","endLine":36,"endColumn":17},{"ruleId":"167","severity":1,"message":"210","line":54,"column":6,"nodeType":"169","endLine":54,"endColumn":13,"suggestions":"211"},{"ruleId":"167","severity":1,"message":"212","line":67,"column":6,"nodeType":"169","endLine":67,"endColumn":25,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":195,"column":17,"nodeType":"177","endLine":195,"endColumn":49},{"ruleId":"214","severity":1,"message":"215","line":196,"column":17,"nodeType":"177","endLine":196,"endColumn":50},{"ruleId":"167","severity":1,"message":"216","line":34,"column":6,"nodeType":"169","endLine":34,"endColumn":18,"suggestions":"217"},{"ruleId":"175","severity":1,"message":"176","line":46,"column":7,"nodeType":"177","endLine":46,"endColumn":26},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setScroll'. Either include it or remove the dependency array.","ArrayExpression",["220"],"React Hook useEffect has missing dependencies: 'c' and 'tranSwipe'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["222"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'clearAllBodyScrollLocks' is defined but never used.","Identifier","unusedVar","'disableBodyScroll' is defined but never used.","'enableBodyScroll' is defined but never used.",["223"],"React Hook useEffect has a missing dependency: 'tranSwipe'. Either include it or remove the dependency array.",["224"],["225"],["226"],"React Hook useEffect has missing dependencies: 'location.pathname', 'navbarColor', 'tranSmooth', and 'tranSwipe'. Either include them or remove the dependency array. If 'tranSwipe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["227"],"'setLength' is assigned a value but never used.","'icon' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleScroll', 't', 'tDelay', and 'tranSwipe'. Either include them or remove the dependency array. If 'tranSwipe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["228"],"'mainTitle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["229"],"React Hook useEffect has a missing dependency: 'isPresent'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has a missing dependency: 'hover'. Either include it or remove the dependency array.",["231"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'windowBlocks'. Either include it or remove the dependency array.",["232"],"'progress' is assigned a value but never used.","'fallback' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'project.photos'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'project.title'. Either include it or remove the dependency array.",["234"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'direction', 'i', 'r', 's', 'tranSwipe', and 'x'. Either include them or remove the dependency array. If 'tranSwipe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"236","fix":"242"},{"desc":"238","fix":"243"},{"desc":"238","fix":"244"},{"desc":"238","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [preview, setScroll]",{"range":"264","text":"265"},"Update the dependencies array to be: [c, tranSwipe]",{"range":"266","text":"267"},"Update the dependencies array to be: [history]",{"range":"268","text":"269"},{"range":"270","text":"265"},{"range":"271","text":"267"},{"range":"272","text":"267"},{"range":"273","text":"267"},"Update the dependencies array to be: [location.pathname, navbarColor, tranSmooth, tranSwipe]",{"range":"274","text":"275"},"Update the dependencies array to be: [element, handleScroll, t, tDelay, tranSwipe]",{"range":"276","text":"277"},"Update the dependencies array to be: [location.pathname]",{"range":"278","text":"279"},"Update the dependencies array to be: [isPresent]",{"range":"280","text":"281"},"Update the dependencies array to be: [hover]",{"range":"282","text":"283"},"Update the dependencies array to be: [windowBlocks]",{"range":"284","text":"285"},"Update the dependencies array to be: [block, project.photos]",{"range":"286","text":"287"},"Update the dependencies array to be: [load, project.title, sliderCount]",{"range":"288","text":"289"},"Update the dependencies array to be: [direction, i, r, s, slideIndex, tranSwipe, x]",{"range":"290","text":"291"},[2237,2246],"[preview, setScroll]",[2594,2596],"[c, tranSwipe]",[2687,2689],"[history]",[2534,2543],[2890,2893],[1371,1373],[867,869],[2951,2953],"[location.pathname, navbarColor, tranSmooth, tranSwipe]",[3217,3226],"[element, handleScroll, t, tDelay, tranSwipe]",[1117,1119],"[location.pathname]",[723,725],"[isPresent]",[1696,1698],"[hover]",[2226,2228],"[windowBlocks]",[1656,1663],"[block, project.photos]",[2091,2110],"[load, project.title, sliderCount]",[968,980],"[direction, i, r, s, slideIndex, tranSwipe, x]"]