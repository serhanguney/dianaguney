[{"/Users/Serhan/Code/dianaguney/src/index.js":"1","/Users/Serhan/Code/dianaguney/src/App.js":"2","/Users/Serhan/Code/dianaguney/src/Pages/Home.js":"3","/Users/Serhan/Code/dianaguney/src/Pages/Projects.js":"4","/Users/Serhan/Code/dianaguney/src/Pages/Skills.js":"5","/Users/Serhan/Code/dianaguney/src/Pages/Contact.js":"6","/Users/Serhan/Code/dianaguney/src/Components/Navbar.js":"7","/Users/Serhan/Code/dianaguney/src/Components/Signature.js":"8","/Users/Serhan/Code/dianaguney/src/Components/MenuTitle.js":"9","/Users/Serhan/Code/dianaguney/src/Components/InfoIcon.js":"10","/Users/Serhan/Code/dianaguney/src/Components/Landscape.js":"11","/Users/Serhan/Code/dianaguney/src/Components/ArrowDown.js":"12","/Users/Serhan/Code/dianaguney/src/Components/Preview.js":"13","/Users/Serhan/Code/dianaguney/src/Components/Phone.js":"14","/Users/Serhan/Code/dianaguney/src/Components/AdvancedIcon.js":"15","/Users/Serhan/Code/dianaguney/src/Projects/Projects.js":"16","/Users/Serhan/Code/dianaguney/src/Components/MenuIcon.js":"17","/Users/Serhan/Code/dianaguney/src/Components/ArrowUp.js":"18","/Users/Serhan/Code/dianaguney/src/Components/ArrowLeft.js":"19","/Users/Serhan/Code/dianaguney/src/Components/ArrowRight.js":"20","/Users/Serhan/Code/dianaguney/src/Pages/HomeDesktop.js":"21","/Users/Serhan/Code/dianaguney/src/Components/Desktop/NavbarDesktop.js":"22"},{"size":146,"mtime":1607779266169,"results":"23","hashOfConfig":"24"},{"size":3308,"mtime":1609254298859,"results":"25","hashOfConfig":"24"},{"size":3923,"mtime":1609236216937,"results":"26","hashOfConfig":"24"},{"size":2361,"mtime":1609236216938,"results":"27","hashOfConfig":"24"},{"size":3169,"mtime":1609236216938,"results":"28","hashOfConfig":"24"},{"size":1325,"mtime":1609236216936,"results":"29","hashOfConfig":"24"},{"size":4639,"mtime":1609254900371,"results":"30","hashOfConfig":"24"},{"size":868,"mtime":1607968146560,"results":"31","hashOfConfig":"24"},{"size":811,"mtime":1609255516726,"results":"32","hashOfConfig":"24"},{"size":3941,"mtime":1609236216599,"results":"33","hashOfConfig":"34"},{"size":693,"mtime":1609236216599,"results":"35","hashOfConfig":"24"},{"size":462,"mtime":1609236216598,"results":"36","hashOfConfig":"24"},{"size":8923,"mtime":1609236216601,"results":"37","hashOfConfig":"24"},{"size":1015,"mtime":1609236216601,"results":"38","hashOfConfig":"24"},{"size":1417,"mtime":1609236216597,"results":"39","hashOfConfig":"24"},{"size":8138,"mtime":1609258311046,"results":"40","hashOfConfig":"24"},{"size":1615,"mtime":1609236216600,"results":"41","hashOfConfig":"24"},{"size":453,"mtime":1609236216599,"results":"42","hashOfConfig":"24"},{"size":462,"mtime":1609236216598,"results":"43","hashOfConfig":"24"},{"size":456,"mtime":1609236216598,"results":"44","hashOfConfig":"24"},{"size":3292,"mtime":1609261908458,"results":"45","hashOfConfig":"24"},{"size":1964,"mtime":1609255465727,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"5rvdn4",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19bs676",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"49"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"49"},"/Users/Serhan/Code/dianaguney/src/index.js",[],["101","102"],"/Users/Serhan/Code/dianaguney/src/App.js",[],"/Users/Serhan/Code/dianaguney/src/Pages/Home.js",["103","104","105"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\n//IMAGES\nimport homeCover from \"../Images/balconies/1.jpg\";\nimport sign from \"../SVGs/Signature.svg\";\nimport ArrowDown from \"../Components/ArrowDown\";\n\n//COMPONENTS\nimport Navbar from \"../Components/Navbar\";\nimport Preview from \"../Components/Preview\";\n\n//ADDITIONAL\nimport { motion, useAnimation, useCycle } from \"framer-motion\";\nimport { projects } from \"../Projects/Projects\";\n\nexport default function Home({ toggle, transition }) {\n  //STATES\n  const { menuOpen, setMenuOpen } = toggle;\n  // const previews = [1, 2, 3];\n  const [elements, setElements] = useState(projects);\n  const [preview, setPreview] = useState(false);\n\n  //VARIABLES\n  const { tranSwipe, tranSmooth } = transition;\n  const location = useLocation();\n  const history = useHistory();\n\n  const [hide, cycleHide] = useCycle(\n    {\n      opacity: 1,\n      transition: { delay: 0.8, ...tranSwipe(0.8) },\n    },\n    {\n      opacity: 0,\n      transition: tranSwipe(0.8),\n    }\n  );\n\n  //VARIANTS\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n\n  useEffect(() => {\n    //clear history on component mount\n    history.replace();\n  }, []);\n  return (\n    <motion.div className=\"home-page\" transition={tranSwipe(1)}>\n      <motion.div\n        className=\"page-transition-element\"\n        initial={location.state ? { width: \"100%\" } : \"\"}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n      ></motion.div>\n\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n        preview={preview}\n      />\n      <motion.div\n        className=\"home-content\"\n        transition={{ delay: 0.4, ...tranSwipe(0.8) }}\n      >\n        <div className=\"cover-image\">\n          <div className=\"overlay\"></div>\n          <img src={homeCover} alt=\"Cover\" />\n        </div>\n        <div className=\"introduction-section\">\n          <h1>About Me</h1>\n          <h2 style={{ fontSize: \"14px\" }}>\n            I am a passionate designer with love for story telling through\n            architecture and cinema.\n          </h2>\n          <p>\n            My background is in Architecture and design and I have a major\n            interest for film and set design. Combining digital media and\n            physcial modeling I love to come up with new designs, scenes and\n            stories to tell.I Have a record of working with model making,\n            graphical and technical presentations, conceptual design and art,\n            sketches and drawings.\n          </p>\n          <img src={sign} />\n          <div className=\"scroll-for-more\">\n            <p>scroll for projects</p>\n            <ArrowDown />\n          </div>\n        </div>\n        <div className=\"home-projects-section\">\n          {elements.map(\n            (element, index) =>\n              index < 3 && (\n                <Preview\n                  key={index}\n                  index={index}\n                  state={{ elements, element, setElements }}\n                  toggle={{ preview, setPreview }}\n                  toggleHide={{ hide, cycleHide }}\n                  tranSwipe={tranSwipe}\n                />\n              )\n          )}\n          <Link to={{ pathname: \"/projects\", state: true }}>\n            <motion.button className=\"link-button\" whileTap={{ scale: 0.9 }}>\n              <span>Go to Projects</span>\n            </motion.button>\n          </Link>\n        </div>\n        <div className=\"footer\"></div>\n      </motion.div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Projects.js",["106"],"import React, { useEffect, useState } from \"react\";\n\n//PAGES\nimport Navbar from \"../Components/Navbar\";\nimport Preview from \"../Components/Preview\";\n//ADDITIONALS\nimport { motion, useAnimation, useCycle } from \"framer-motion\";\n\n//PROJECTS\nimport { projects } from \"../Projects/Projects\";\n\nexport default function Projects({ toggle, transition }) {\n  //STATES\n  const [preview, setPreview] = useState(false);\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n  const [elements, setElements] = useState(projects);\n\n  //the cyle animation is for inactive elements to disappear when an element is activated.\n  //it needs to be defined in the parent component this way we only have one toggle that controls all children separately.\n  //we use a ternary to animate each component separately {!element.active ? hide : \"\"}\n  const [hide, cycleHide] = useCycle(\n    {\n      opacity: 1,\n      transition: { delay: 0.8, ...tranSwipe(0.8) },\n    },\n    {\n      opacity: 0,\n      transition: tranSwipe(0.8),\n    }\n  );\n\n  useEffect(() => {\n    const scroll = window.scrollY;\n    if (scroll !== 0) {\n      window.scrollTo(0, 0);\n    }\n  }, []);\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, [c]);\n\n  return (\n    <div className=\"projects-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n        preview={preview}\n      />\n\n      <motion.div className=\"projects-content\">\n        {elements.map((element, index) => (\n          <Preview\n            key={index}\n            state={{ element, elements, setElements }}\n            toggle={{ preview, setPreview }}\n            index={index}\n            toggleHide={{ hide, cycleHide }}\n            tranSwipe={tranSwipe}\n          />\n        ))}\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Skills.js",["107"],"import React, { useEffect } from \"react\";\n\n//PAGES\nimport Navbar from \"../Components/Navbar\";\nimport AdvancedIcon from \"../Components/AdvancedIcon\";\nimport checkIcon from \"../SVGs/CheckIcon.svg\";\n\n//ADDITIONALS\nimport { motion, useAnimation } from \"framer-motion\";\n\nexport default function Skills({ toggle, transition }) {\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n\n  const skills = [\n    {\n      title: \"2D Modeling\",\n      list: [{ name: \"AutoCad 2D\", advanced: true }],\n    },\n    {\n      title: \"3D Modeling\",\n      list: [\n        { name: \"Rhino 3D\", advanced: true },\n        { name: \"Sketch-up 3D\", advanced: false },\n        { name: \"Microstation\", advanced: false },\n        { name: \"3D point cloud\", advanced: false },\n        { name: \"Physical Modelling\", advanced: false },\n      ],\n    },\n    {\n      title: \"Editing\",\n      list: [\n        { name: \"Photoshop CS6\", advanced: true },\n        { name: \"Indesign CS6\", advanced: true },\n        { name: \"Illustrator CS6\", advanced: true },\n      ],\n    },\n  ];\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n  return (\n    <div className=\"skills-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n      />\n      <motion.div className=\"skills-content\">\n        <div className=\"skills-text\">\n          <p>\n            I work with&nbsp;\n            <span>\n              3D design {\"&\"} modelling, 2D illustrations and sketching and\n              editing with Adobe CS6.\n            </span>\n          </p>\n        </div>\n        <div className=\"skills-info\">\n          <div className=\"row\">\n            <AdvancedIcon advanced={true} />\n            <p>Advanced</p>\n          </div>\n          <div className=\"row\">\n            <AdvancedIcon advanced={false} />\n            <p>Intermediate</p>\n          </div>\n          <div className=\"row\"></div>\n        </div>\n        <div className=\"skills-section\">\n          <div className=\"column\">\n            {skills.map((item, index) => (\n              <div className=\"skill-container\">\n                <h2>{item.title}</h2>\n                <div className=\"skill-list-container\">\n                  {item.list.map((el, i) => (\n                    <div className=\"skill-row\">\n                      <img src={checkIcon} alt=\"check\" />\n                      <p>{el.name}</p>\n                      <AdvancedIcon advanced={el.advanced} />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Pages/Contact.js",["108"],"import React, { useEffect } from \"react\";\n//PAGES\nimport Navbar from \"../Components/Navbar\";\n\n//ADDITIONALS\nimport { motion, useAnimation } from \"framer-motion\";\n\nexport default function Contact({ toggle, transition }) {\n  const { menuOpen, setMenuOpen } = toggle;\n  const { tranSwipe, tranSmooth } = transition;\n\n  //PAGE-IN ANIMATION\n  const c = useAnimation();\n  useEffect(() => {\n    async function pageInAnimation() {\n      await c.start({ x: window.innerWidth, transition: tranSwipe(1) });\n      await c.start({ width: 0, transition: { duration: 0.1 } });\n      await c.start({ x: 0, transition: { duration: 0.1 } });\n    }\n    pageInAnimation();\n  }, []);\n  return (\n    <div className=\"contact-page\">\n      <motion.div\n        className=\"page-transition-element\"\n        initial={{ width: \"100%\" }}\n        animate={c}\n        exit={{ width: \"100%\", transition: tranSwipe(1) }}\n        transition={tranSwipe(1)}\n      ></motion.div>\n      <Navbar\n        toggle={{ menuOpen, setMenuOpen }}\n        tranSwipe={tranSwipe}\n        tranSmooth={tranSmooth}\n      />\n      <motion.div className=\"contact-content\">\n        <p>\n          Thank you for taking the time to browse through what I’ve been doing.\n          You can reach me using the contact information below.\n        </p>\n      </motion.div>\n    </div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Navbar.js",["109"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\n//COMPONENTS\nimport MenuIcon from \"./MenuIcon\";\nimport Signature from \"./Signature\";\nimport MenuTitle from \"./MenuTitle\";\n\n//ADDITIONALS\nimport { motion, useAnimation } from \"framer-motion\";\n\n//IMAGES\nimport contactIcon from \"../Icons/contactIcon.svg\";\nimport projectsIcon from \"../Icons/projectsIcon.svg\";\nimport skillsIcon from \"../Icons/skillsIcon.svg\";\nimport homeIcon from \"../Icons/meIcon.svg\";\n\nexport const menuItems = [\n  {\n    icon: projectsIcon,\n    title: \"Projects\",\n    text: \"PROJECTS\",\n    link: \"projects\",\n    fromDashboard: false,\n  },\n  {\n    icon: skillsIcon,\n    title: \"Skills\",\n    text: \"SKILLS\",\n    link: \"skills\",\n    fromDashboard: false,\n  },\n  {\n    icon: contactIcon,\n    title: \"Contact\",\n    text: \"CONTACT\",\n    link: \"contact\",\n    fromDashboard: false,\n  },\n  {\n    icon: homeIcon,\n    title: \"Home\",\n    text: \"DIANA GUNEY\",\n    link: \"dianaguney\",\n    fromDashboard: true,\n  },\n];\nexport default function Navbar({ toggle, tranSwipe, tranSmooth, preview }) {\n  //STATES\n  const [icon, setIcon] = useState(\"\");\n  const { menuOpen, setMenuOpen } = toggle;\n\n  //VARIABLES\n  const location = useLocation();\n\n  const filteredItems = menuItems.filter(\n    (item) => location.pathname === `/${item.link}`\n  );\n  const mainTitle = filteredItems[0].text.split(\"\");\n  //VARIANTS\n  const parentVariants = {\n    initial: { opacity: 1 },\n    animate: { opacity: 1 },\n  };\n  const menuVariants = {\n    initial: {\n      height: 0,\n      transition: {\n        ...tranSwipe(0.4),\n        delay: 0.2,\n        staggerChildren: 0.05,\n        staggerDirection: -1,\n      },\n    },\n    animate: {\n      height: 300,\n      transition: {\n        ...tranSwipe(0.4),\n        staggerChildren: 0.05,\n      },\n    },\n  };\n  const itemVariants = {\n    initial: { y: 20, opacity: 0, transition: tranSmooth(0.2) },\n    animate: { y: 0, opacity: 1, transition: tranSmooth(0.2) },\n  };\n  const navbarColor = useAnimation();\n\n  const backgroundVariants = {\n    initial: { opacity: 0, transition: { ...tranSwipe(0.4), delay: 0.3 } },\n    animate: { opacity: 1, transition: { ...tranSwipe(0.4) } },\n  };\n  //setting the menu icon and the background color based on the page selection\n  useEffect(() => {\n    const item = menuItems.filter(\n      (item) => `/${item.link}` === location.pathname\n    );\n    if (location.pathname === \"/dianaguney\") {\n      setIcon(<Signature tranSwipe={tranSwipe} tranSmooth={tranSmooth} />);\n      navbarColor.start({ backgroundColor: \"#ffffff\" });\n    } else {\n      setIcon(\n        <div className=\"menu-icon\">\n          <motion.img\n            src={item[0].icon}\n            alt={item[0].title}\n            initial={{ y: 70 }}\n            animate={{ y: 0 }}\n            transition={tranSwipe(1)}\n            exit={{ y: 70 }}\n          />\n        </div>\n      );\n      navbarColor.start({ backgroundColor: \"#fff8f0\" });\n    }\n  }, []);\n  // useEffect(() => console.log(preview), [preview]);\n\n  return (\n    <motion.div\n      className=\"navbar-container\"\n      initial={{ y: 0 }}\n      transition={tranSwipe(0.8)}\n    >\n      <motion.div\n        className=\"background freeze\"\n        initial=\"initial\"\n        exit=\"initial\"\n        animate={menuOpen ? \"animate\" : \"initial\"}\n        variants={backgroundVariants}\n      ></motion.div>\n      <motion.div\n        className=\"navbar-section\"\n        initial=\"initial\"\n        animate={menuOpen ? \"animate\" : \"initial\"}\n        variants={parentVariants}\n        exit=\"initial\"\n      >\n        <motion.div\n          className=\"navbar-header\"\n          animate={navbarColor}\n          initial={{ backgroundColor: \"#fff8f0\" }}\n          transition={tranSwipe(1)}\n        >\n          <MenuIcon toggle={{ menuOpen, setMenuOpen }} />\n          <MenuTitle title={mainTitle} tranSwipe={tranSwipe} />\n          {icon}\n        </motion.div>\n        <motion.div className=\"menu-items\" variants={menuVariants}>\n          {menuItems.map((item, index) => (\n            <Link\n              to={{ pathname: `/${item.link}`, state: item.fromDashboard }}\n              key={index}\n            >\n              <motion.div\n                className=\"menu-item-container\"\n                variants={itemVariants}\n                onClick={() => setMenuOpen(!menuOpen)}\n              >\n                <div className=\"menu-item\">\n                  <img src={item.icon} alt={item.title} />\n                </div>\n                <h2>{item.title}</h2>\n              </motion.div>\n            </Link>\n          ))}\n        </motion.div>\n      </motion.div>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Signature.js",[],"/Users/Serhan/Code/dianaguney/src/Components/MenuTitle.js",["110"],"import React, { useState } from \"react\";\n\n//ADDITIONAOLS\nimport { motion } from \"framer-motion\";\n\nexport default function MenuTitle({ title, tranSwipe }) {\n  const [length, setLength] = useState(title);\n  const parent = {\n    initial: { y: 0, transition: { staggerChildren: 0.008 } },\n    animate: { y: 0, transition: { staggerChildren: 0.008 } },\n  };\n\n  const children = {\n    initial: { y: 30, transition: tranSwipe(0.4) },\n    animate: { y: 0, transition: tranSwipe(1) },\n  };\n  return (\n    <motion.div\n      className=\"title-container\"\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"initial\"\n      variants={parent}\n    >\n      {length.map((letter, index) => (\n        <motion.span key={index} variants={children}>\n          {letter}\n        </motion.span>\n      ))}\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/InfoIcon.js",["111","112","113"],"/Users/Serhan/Code/dianaguney/src/Components/Landscape.js",["114"],"import React from \"react\";\n\nimport { motion } from \"framer-motion\";\nimport Phone from \"./Phone\";\n\nexport default function Landscape() {\n  //classes\n\n  const icon = {\n    boxShadow: \"4px 4px 16px rgba(0,0,0,0.3)\",\n  };\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 2 }}\n      className=\"landscape\"\n    >\n      <div className=\"landscape-text\">\n        <h1>Move to Portrait Mode please</h1>\n        <p>\n          This is a portrait-only website. I'd kindly like to ask you to use my\n          website in portrait mode please.\n        </p>\n        <h2>Thank you :)</h2>\n      </div>\n      <Phone />\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/ArrowDown.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Preview.js",["115","116","117"],"import React, { useRef, useEffect } from \"react\";\nimport ArrowUp from \"./ArrowUp\";\nimport ArrowLeft from \"./ArrowLeft\";\nimport ArrowRight from \"./ArrowRight\";\nimport ArrowDown from \"./ArrowDown\";\n// import SwipeIcon from \"../SVGs/SwipeIcon.svg\";\n\n//ADDITIONALS\nimport {\n  animate,\n  motion,\n  useMotionValue,\n  useTransform,\n  AnimatePresence,\n} from \"framer-motion\";\n\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\n\nexport default function Preview({\n  state,\n  index,\n  tranSwipe,\n  toggle,\n  toggleHide,\n}) {\n  //STATES\n  const refContainer = useRef(null);\n  const { element, elements, setElements } = state;\n  const { preview, setPreview } = toggle;\n  const { hide, cycleHide } = toggleHide;\n\n  //ANIMATIONS\n  const t = useMotionValue(0);\n\n  const height = useTransform(t, [0, 500], [420, window.innerHeight]);\n\n  const enlargeWidth = useTransform(t, [0, 500], [270, 560]);\n  const fadeOut = useTransform(t, [0, 500], [1, 0]);\n  const slideOut = useTransform(t, [0, 500], [0, 30]);\n  const slideUp = useTransform(t, [0, 500], [0, -100]);\n\n  const tDelay = useMotionValue(0);\n  const delaySlideIn = useTransform(tDelay, [0, 500], [25, 0]);\n  const delayFadeIn = useTransform(tDelay, [0, 500], [0, 1]);\n\n  //this will be used to animate the description in delay, when element is active\n  const d = useMotionValue(0);\n\n  const dExpand = useTransform(d, [0, 500], [0, -350]);\n  const dFadeIn = useTransform(d, [0, 500], [0, 1]);\n  const dFadeOut = useTransform(d, [0, 500], [1, 0]);\n  const dSlide = useTransform(d, [0, 500], [\"0%\", \"-100%\"]);\n  // const dSlideOut = useTransform(d, [0, 500], [\"0%\", \"-100%\"]);\n\n  //this will be used to animate the scrolling of the window when element is active\n  const scroll = useMotionValue(0);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => scroll.set(window.scrollY));\n  }, []);\n\n  // control body scroll in preview mode\n  // let targetElement = document.querySelector(\"html\");\n  useEffect(() => {\n    // preview\n    // ? targetElement.classList.add(\"no-scroll\")\n    // : targetElement.classList.remove(\"no-scroll\");\n    preview\n      ? disableBodyScroll(refContainer.current)\n      : enableBodyScroll(refContainer.current);\n  });\n\n  //HANDLER FUNCTIONS\n\n  function handleOpen(index) {\n    //set navbar z-index\n    const navbar = document.querySelector(\".navbar-container\");\n    navbar.classList.add(\"behind\");\n    //Element activation is required to handle animations of the page.\n    //Whichever element is active thats what we'll animate.\n    const array = elements.map((el, i) => {\n      if (index === i) {\n        if (el.active) {\n          return { ...el, active: false };\n        } else {\n          return { ...el, active: true };\n        }\n      } else {\n        return { ...el, active: false };\n      }\n    });\n\n    setElements(array);\n\n    //preview is required for the page elements outisde element.map().\n    //We can't send the element.active information simply because these elements are outside the map loop.\n    setPreview(true);\n    cycleHide();\n  }\n\n  function handleClose() {\n    if (preview) {\n      const array = elements.map((el) => {\n        if (el.active) {\n          return { ...el, active: false };\n        } else;\n        return el;\n      });\n\n      cycleHide();\n      setElements(array);\n      setPreview(false);\n    }\n    setTimeout(() => {\n      const navbar = document.querySelector(\".navbar-container\");\n      navbar.classList.remove(\"behind\");\n    }, 1500);\n  }\n\n  function handleScroll() {\n    if (refContainer.current) {\n      if (element.active) {\n        let container = refContainer.current.getBoundingClientRect();\n        const total = container.top + window.scrollY;\n\n        animate(scroll, total, { ...tranSwipe(1.2) });\n      }\n    }\n  }\n  useEffect(() => {\n    if (!element.active) {\n      return;\n    } else {\n      scroll.onChange((value) => {\n        window.scrollTo({\n          top: value,\n        });\n      });\n    }\n  }, [element]);\n  useEffect(() => {\n    if (element.active) {\n      animate(t, 500, tranSwipe(0.8));\n      animate(tDelay, 500, {\n        delay: 0.5,\n        ...tranSwipe(0.8),\n        onComplete: () => handleScroll(),\n      });\n    } else {\n      animate(t, 0, { delay: 0.5, ...tranSwipe(0.8) });\n      animate(tDelay, 0, tranSwipe(0.8));\n    }\n  }, [element]);\n\n  return (\n    <motion.div\n      ref={refContainer}\n      id={element.id}\n      key={index}\n      className=\"project-container\"\n      animate={!element.active && hide}\n      style={{ height, marginTop: slideUp }}\n      layout\n    >\n      <motion.div\n        className=\"preview-background\"\n        animate={\n          element.active\n            ? { opacity: 1, transition: tranSwipe(0.8) }\n            : { opacity: 0, transition: { delay: 0.5, ...tranSwipe(0.8) } }\n        }\n      ></motion.div>\n      <div className=\"text-container\">\n        <h1>{element.title}</h1>\n        <p>{element.text}</p>\n      </div>\n      <div className=\"button-section\">\n        <motion.div\n          className=\"button-container\"\n          style={{ x: slideOut, opacity: fadeOut }}\n        >\n          <motion.button\n            onClick={() => handleOpen(index)}\n            className=\"primary-button\"\n          >\n            <span>See more</span>\n          </motion.button>\n          <ArrowRight />\n        </motion.div>\n        <motion.div\n          className={\n            element.active ? \"button-container\" : \"button-container freeze\"\n          }\n          style={{ x: delaySlideIn, opacity: delayFadeIn }}\n        >\n          <ArrowLeft />\n          <motion.button\n            onClick={() => handleClose(index)}\n            className=\"primary-button\"\n          >\n            <span>Go back</span>\n          </motion.button>\n        </motion.div>\n      </div>\n      <motion.div key={index} className=\"project-slider\" layout>\n        <motion.div\n          className=\"slider-container\"\n          transition={tranSwipe(0.8)}\n          layout\n        >\n          {element.photos.map((photo, i) => (\n            <motion.div\n              key={i}\n              className=\"image-container\"\n              transition={tranSwipe(0.8)}\n              style={{ width: enlargeWidth }}\n              initial={{ borderRadius: 20 }}\n              layout\n            >\n              <motion.img\n                src={photo}\n                alt={i}\n                transition={tranSwipe(0.8)}\n                layout\n              />\n            </motion.div>\n          ))}\n        </motion.div>\n      </motion.div>\n      <motion.div\n        className=\"description-background\"\n        style={{ opacity: dFadeIn }}\n      ></motion.div>\n      <AnimatePresence>\n        {element.active && (\n          <motion.div\n            className=\"project-description\"\n            initial={{ x: 30, opacity: 0 }}\n            animate={{\n              x: 0,\n              opacity: 1,\n              transition: { delay: 1, ...tranSwipe(0.8) },\n            }}\n            exit={{ x: 30, opacity: 0, height: 0, transition: tranSwipe(0.6) }}\n            style={{ y: dExpand }}\n            layout\n          >\n            <motion.div\n              className=\"description-overlay\"\n              style={{ opacity: dFadeOut }}\n            ></motion.div>\n            <div className=\"description-title\">\n              <h2>Description</h2>\n              <div className=\"info-container\">\n                <motion.div\n                  className=\"button-container\"\n                  style={{ x: dSlide, opacity: dFadeOut }}\n                >\n                  <button\n                    className=\"primary-button\"\n                    onClick={() => {\n                      d.current === 0\n                        ? animate(d, 500, { ...tranSwipe(0.6) })\n                        : animate(d, 0, { ...tranSwipe(0.6) });\n                      console.log(d.get());\n                    }}\n                  >\n                    <span style={{ fontSize: \"16px\" }}>Press for more</span>\n                  </button>\n                  <ArrowUp />\n                </motion.div>\n                <motion.div\n                  className=\"button-container\"\n                  style={{ x: dSlide, opacity: dFadeIn }}\n                >\n                  <button\n                    className=\"primary-button\"\n                    onClick={() => {\n                      d.current === 0\n                        ? animate(d, 500, { ...tranSwipe(0.6) })\n                        : animate(d, 0, { ...tranSwipe(0.6) });\n                      console.log(d.get());\n                    }}\n                  >\n                    <span style={{ fontSize: \"16px\" }}>Press for less</span>\n                  </button>\n                  <ArrowDown />\n                </motion.div>\n              </div>\n            </div>\n            <div className=\"description\">\n              <p>{element.paragraph}</p>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n}\n","/Users/Serhan/Code/dianaguney/src/Components/Phone.js",[],"/Users/Serhan/Code/dianaguney/src/Components/AdvancedIcon.js",[],"/Users/Serhan/Code/dianaguney/src/Projects/Projects.js",[],"/Users/Serhan/Code/dianaguney/src/Components/MenuIcon.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowUp.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowLeft.js",[],"/Users/Serhan/Code/dianaguney/src/Components/ArrowRight.js",[],"/Users/Serhan/Code/dianaguney/src/Pages/HomeDesktop.js",[],"/Users/Serhan/Code/dianaguney/src/Components/Desktop/NavbarDesktop.js",["118"],"import React, { useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nimport { menuItems } from \"../Navbar\";\nimport Signature from \"../Signature\";\nimport MenuTitle from \"../MenuTitle\";\n\nexport default function NavbarDesktop({ tranSwipe, tranSmooth }) {\n  //define location to anticipate user's paths based on which page he is coming from.\n  //ITEM MATCH - we'll use location.pathname to match the menu links and location.state to distinguish navigation from homepage\n  const location = useLocation();\n\n  //ICON MATCH - we'll use the icon state to match the global menu icon with the appropriate page icon\n  const [icon, setIcon] = useState(null);\n\n  //TITLE MATCH - we'll send the page title to MenuTitle component to animate it.\n  const filteredItems = menuItems.filter(\n    (item) => location.pathname === `/${item.link}`\n  );\n  const mainTitle = filteredItems[0].text.split(\"\");\n\n  //ICON MATCH - we'll use location to do the icon matchin via useEffect\n  useEffect(() => {\n    const item = menuItems.filter(\n      (item) => `/${item.link}` === location.pathname\n    );\n\n    //since the icon of the homepage is the only animatable icon we'll have to do an if conditional\n    if (item[0].title === \"Home\") {\n      setIcon(<Signature tranSmooth={tranSmooth} tranSwipe={tranSwipe} />);\n    } else {\n      setIcon(<img src={item[0].icon} alt={item[0].title} />);\n    }\n    console.log(\"item\", [item, location.pathname]);\n  }, []);\n\n  return (\n    <div className=\"navbar-desktop\">\n      <div className=\"menu-icon\">{icon}</div>\n      <div className=\"menu-title\">\n        {<MenuTitle title={mainTitle} tranSwipe={tranSwipe} />}\n      </div>\n      <div className=\"menu-items\">\n        {menuItems.map((item, index) => (\n          <Link\n            key={index}\n            to={{ pathname: item.link, state: item.fromDashboard }}\n          >\n            <h2>{item.text}</h2>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":52,"column":6,"nodeType":"125","endLine":52,"endColumn":8,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":57,"column":6,"nodeType":"125","endLine":57,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":95,"column":11,"nodeType":"131","endLine":95,"endColumn":29},{"ruleId":"123","severity":1,"message":"132","line":48,"column":6,"nodeType":"125","endLine":48,"endColumn":9,"suggestions":"133"},{"ruleId":"123","severity":1,"message":"124","line":49,"column":6,"nodeType":"125","endLine":49,"endColumn":8,"suggestions":"134"},{"ruleId":"123","severity":1,"message":"124","line":21,"column":6,"nodeType":"125","endLine":21,"endColumn":8,"suggestions":"135"},{"ruleId":"123","severity":1,"message":"136","line":116,"column":6,"nodeType":"125","endLine":116,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":7,"column":18,"nodeType":"140","messageId":"141","endLine":7,"endColumn":27},{"ruleId":"123","severity":1,"message":"142","line":67,"column":6,"nodeType":"125","endLine":67,"endColumn":15,"suggestions":"143"},{"ruleId":"129","severity":1,"message":"130","line":91,"column":11,"nodeType":"131","endLine":91,"endColumn":51},{"ruleId":"129","severity":1,"message":"130","line":100,"column":11,"nodeType":"131","endLine":100,"endColumn":49},{"ruleId":"138","severity":1,"message":"144","line":9,"column":9,"nodeType":"140","messageId":"141","endLine":9,"endColumn":13},{"ruleId":"123","severity":1,"message":"145","line":60,"column":6,"nodeType":"125","endLine":60,"endColumn":8,"suggestions":"146"},{"ruleId":"123","severity":1,"message":"145","line":140,"column":6,"nodeType":"125","endLine":140,"endColumn":15,"suggestions":"147"},{"ruleId":"123","severity":1,"message":"148","line":153,"column":6,"nodeType":"125","endLine":153,"endColumn":15,"suggestions":"149"},{"ruleId":"123","severity":1,"message":"150","line":35,"column":6,"nodeType":"125","endLine":35,"endColumn":8,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'c' and 'tranSwipe'. Either include them or remove the dependency array.","ArrayExpression",["154"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'tranSwipe'. Either include it or remove the dependency array.",["156"],["157"],["158"],"React Hook useEffect has missing dependencies: 'location.pathname', 'navbarColor', 'tranSmooth', and 'tranSwipe'. Either include them or remove the dependency array. If 'tranSwipe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],"no-unused-vars","'setLength' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'active'. Either include it or remove the dependency array.",["160"],"'icon' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'scroll'. Either include it or remove the dependency array.",["161"],["162"],"React Hook useEffect has missing dependencies: 'handleScroll', 't', 'tDelay', and 'tranSwipe'. Either include them or remove the dependency array. If 'tranSwipe' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["163"],"React Hook useEffect has missing dependencies: 'location.pathname', 'tranSmooth', and 'tranSwipe'. Either include them or remove the dependency array. If 'setIcon' needs the current value of 'tranSmooth', you can also switch to useReducer instead of useState and read 'tranSmooth' in the reducer.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"165","fix":"169"},{"desc":"165","fix":"170"},{"desc":"165","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [c, tranSwipe]",{"range":"184","text":"185"},"Update the dependencies array to be: [history]",{"range":"186","text":"187"},{"range":"188","text":"185"},{"range":"189","text":"185"},{"range":"190","text":"185"},"Update the dependencies array to be: [location.pathname, navbarColor, tranSmooth, tranSwipe]",{"range":"191","text":"192"},"Update the dependencies array to be: [active, counter]",{"range":"193","text":"194"},"Update the dependencies array to be: [scroll]",{"range":"195","text":"196"},"Update the dependencies array to be: [element, scroll]",{"range":"197","text":"198"},"Update the dependencies array to be: [element, handleScroll, t, tDelay, tranSwipe]",{"range":"199","text":"200"},"Update the dependencies array to be: [location.pathname, tranSmooth, tranSwipe]",{"range":"201","text":"202"},[1461,1463],"[c, tranSwipe]",[1554,1556],"[history]",[1517,1520],[1416,1418],[658,660],[2971,2973],"[location.pathname, navbarColor, tranSmooth, tranSwipe]",[1284,1293],"[active, counter]",[1855,1857],"[scroll]",[3953,3962],"[element, scroll]",[4300,4309],"[element, handleScroll, t, tDelay, tranSwipe]",[1461,1463],"[location.pathname, tranSmooth, tranSwipe]"]